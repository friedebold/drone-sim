{"version":3,"sources":["src/Flight/Aircraft.tsx","src/constants.ts","src/calculations/common.ts","src/Flight/DataPanel/Databox.tsx","src/Flight/DataPanel/DataPanel.tsx","src/Flight/Grid.tsx","src/Flight/Slider.tsx","src/Flight/Flight.tsx","src/Flight/FlightWrapper.tsx","src/hooks/useClock.ts","src/calculations/landing.ts","src/calculations/reverse_cruise.ts","src/calculations/spin.ts","src/calculations/takeoff.ts","src/calculations/tilt_to_cruise.ts","src/calculations/tilt_to_land.ts","src/Preflight/FlightOptionInputs.tsx","src/Preflight/Planner.tsx","src/calculations/main.ts","App.tsx"],"names":["stator_width","aircraft_width","Background","styled","Animated","View","Fulselage","AircraftComp","ForceBox","ForceVector","DirectionVector","Aircraft","vertical","horizontal","pitch","back_thrust_components","front_thrust_components","useWindowDimensions","width","height","animatedBackground","useAnimatedStyle","top","value","distance","left","transform","rotate","angle","animatedVectorBox","Math","abs","animatedFrontVectorBox","getVectorComponentStyle","side","direction","thrust_component","get_aircraft_style","get_force_vector_style","total","style","round","num","digits","adjust_for_horizontal","thrust_total","pitch_angle","cos","PI","margin","Header","Text","Row","Column","Databox","data","titles","map","title","idx","values","AnimatedText","text","FlightMode","ClockBox","Clock","Spacer","DataPanel","clock","mode","tClock","useDerivedValue","toString","fThrust","bThrust","totalThrust","getBoxStyle","mode_val","backgroundColor","opacity","header","acceleration","velocity","fontSize","Grid","getLatitudeStyle","e","getLatitudeTextStyle","position","animatedLatitudeStyle","animatedLongitudeStyle","animatedLongitudeTextStyle","AbsoluteBackground","Longitudes","Latitudes","Array","keys","index","Slider","clockBarStyle","BackButton","TouchableOpacity","Flight","setNavigation","clock_running","onPress","FlightWrapper","options","useSharedValue","prediction","altitude","runClock","withTiming","duration","NR_OF_SEC","easing","Easing","linear","finished","useAnimatedReaction","formatedClock","Number","toFixed","resultClock","isNew","useClock","rounded_clock","frontThrustComponents","backThrustComponents","console","log","logger","start_clock","active","panGesture","Gesture","Pan","onBegin","cancelAnimation","onChange","drag_clock","translationX","clamped_drag_clock","max","min","onFinalize","onEnd","withDecay","velocityX","clamp","toggle_clock_running","animatedBackgroundStyle","gesture","TouchableWithoutFeedback","runOnJS","runLanding","engines_running","thrust","potVelocity","potAltitude","j","MAX_THRUST","correction_thrust","front","back","reverse_cruise","spin","tilting","HOVER_THRUST","runTakeoff","defaultAltitude","max_altitude","i","potAcceleration","targetAltitude","runTiltToCruise","potPitchAcceleration","potPitchVelocity","potPitchDistance","maxPitch","tilt_to_land","Input","TextInput","FlightOptionInputs","setOptions","useState","setTargetAltitude","targetDistance","aircraftType","disableHorizontal","onChangeText","number","isNaN","justifyContent","alignItems","color","Planner","setData","navigation","useEffect","flightData","results","front_vertical","front_horizontal","sin","back_vertical","back_horizontal","flightMoment","push","calculateFlight","fontWeight","App","SafeAreaView","flex","StatusBar"],"mappings":"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","file":"static/js/app.802e90ed.chunk.js","sourcesContent":["import React from \"react\";\nimport { useWindowDimensions } from \"react-native\";\nimport Animated, { useAnimatedStyle } from \"react-native-reanimated\";\nimport styled from \"styled-components/native\";\nimport { ThrustComponents } from \"../../App\";\nimport { LAT_DISTANCE, LON_DISTANCE } from \"../constants\";\nimport { DimensionData, PitchProps } from \"./FlightWrapper\";\n\ninterface Props {\n\t// flight_data: Animated.SharedValue<FlightData>;\n\t/* \tgrid_move: boolean; */\n\tvertical: Animated.SharedValue<DimensionData>;\n\thorizontal: Animated.SharedValue<DimensionData>;\n\tpitch: Animated.SharedValue<PitchProps>;\n\tback_thrust_components: Animated.SharedValue<ThrustComponents>;\n\tfront_thrust_components: Animated.SharedValue<ThrustComponents>;\n}\n\nconst Aircraft: React.FC<Props> = ({\n\t/* \tgrid_move, */\n\tvertical,\n\thorizontal,\n\tpitch,\n\tback_thrust_components,\n\tfront_thrust_components,\n}) => {\n\tconst { width, height } = useWindowDimensions();\n\tconst thrustScaler = 4;\n\n\tconst animatedBackground = useAnimatedStyle(() => {\n\t\treturn {\n\t\t\ttop:\n\t\t\t\t/*  grid_move\n\t\t\t\t? height / 2 - aircraft_width / 2\n\t\t\t\t: */ height / 2 -\n\t\t\t\taircraft_width / 2 -\n\t\t\t\t(vertical.value.distance / 10) * LON_DISTANCE,\n\t\t\tleft:\n\t\t\t\t/* grid_move\n\t\t\t\t? width / 2 - aircraft_width / 2\n\t\t\t\t: */ width / 2 -\n\t\t\t\taircraft_width / 2 +\n\t\t\t\t(horizontal.value.distance / 10) * LAT_DISTANCE,\n\t\t\ttransform: [{ rotate: pitch.value.angle + \"deg\" }],\n\t\t};\n\t});\n\n\tconst animatedVectorBox = useAnimatedStyle(() => {\n\t\treturn {\n\t\t\ttransform: [{ rotate: -pitch.value.angle + \"deg\" }],\n\t\t\theight: Math.abs(\n\t\t\t\tback_thrust_components.value.vertical * 2 * thrustScaler\n\t\t\t),\n\t\t\twidth: Math.abs(\n\t\t\t\tback_thrust_components.value.horizontal * 2 * thrustScaler\n\t\t\t),\n\t\t\tleft: -Math.abs(\n\t\t\t\tback_thrust_components.value.horizontal * thrustScaler\n\t\t\t), //-back_thrust.value * thrustScaler,\n\t\t\ttop:\n\t\t\t\taircraft_width / 2 -\n\t\t\t\tback_thrust_components.value.vertical * thrustScaler, //aircraft_width / 2 - back_thrust.value * thrustScaler,\n\t\t};\n\t});\n\n\tconst animatedFrontVectorBox = useAnimatedStyle(() => {\n\t\treturn {\n\t\t\ttransform: [{ rotate: -pitch.value.angle + \"deg\" }],\n\t\t\theight: Math.abs(\n\t\t\t\tfront_thrust_components.value.vertical * 2 * thrustScaler\n\t\t\t),\n\t\t\twidth: Math.abs(\n\t\t\t\tfront_thrust_components.value.horizontal * 2 * thrustScaler\n\t\t\t),\n\t\t\tleft:\n\t\t\t\taircraft_width -\n\t\t\t\tMath.abs(\n\t\t\t\t\tfront_thrust_components.value.horizontal * thrustScaler\n\t\t\t\t),\n\t\t\ttop:\n\t\t\t\taircraft_width / 2 -\n\t\t\t\tfront_thrust_components.value.vertical * thrustScaler,\n\t\t};\n\t});\n\n\tconst getVectorComponentStyle = (side: string, direction: string) => {\n\t\t\"worklet\";\n\t\tlet thrust_component =\n\t\t\tside == \"front\" ? front_thrust_components : back_thrust_components;\n\t\tconst animatedVectorStyle = useAnimatedStyle(() => {\n\t\t\t/* const vertical_thrust =\n\t\t\t\tMath.cos((pitch_angle.value * Math.PI) / 180) * back_thrust.value; */\n\t\t\treturn {\n\t\t\t\theight:\n\t\t\t\t\tdirection == \"vertical\"\n\t\t\t\t\t\t? Math.abs(\n\t\t\t\t\t\t\t\tthrust_component.value.vertical * thrustScaler\n\t\t\t\t\t\t  )\n\t\t\t\t\t\t: 1,\n\t\t\t\twidth:\n\t\t\t\t\tdirection == \"vertical\"\n\t\t\t\t\t\t? 1\n\t\t\t\t\t\t: Math.abs(\n\t\t\t\t\t\t\t\tthrust_component.value.horizontal * thrustScaler\n\t\t\t\t\t\t  ),\n\t\t\t\ttop: Math.abs(thrust_component.value.vertical * thrustScaler),\n\t\t\t\tleft:\n\t\t\t\t\tdirection == \"vertical\"\n\t\t\t\t\t\t? Math.abs(\n\t\t\t\t\t\t\t\tthrust_component.value.horizontal * thrustScaler\n\t\t\t\t\t\t  )\n\t\t\t\t\t\t: thrust_component.value.horizontal < 0\n\t\t\t\t\t\t? Math.abs(\n\t\t\t\t\t\t\t\tthrust_component.value.horizontal * thrustScaler\n\t\t\t\t\t\t  )\n\t\t\t\t\t\t: 0,\n\t\t\t};\n\t\t});\n\t\treturn animatedVectorStyle;\n\t};\n\n\tconst get_aircraft_style = (direction: string) => {\n\t\t\"worklet\";\n\t\tconst aircraftStyle = useAnimatedStyle(() => {\n\t\t\treturn {\n\t\t\t\ttop: aircraft_width / 2 - stator_width / 2,\n\t\t\t\tleft:\n\t\t\t\t\tdirection == \"back\"\n\t\t\t\t\t\t? -stator_width / 2\n\t\t\t\t\t\t: aircraft_width - stator_width / 2,\n\t\t\t};\n\t\t});\n\t\treturn aircraftStyle;\n\t};\n\n\tconst get_force_vector_style = (direction: string) => {\n\t\t\"worklet\";\n\t\tconst forceVectorStyle = useAnimatedStyle(() => {\n\t\t\treturn {\n\t\t\t\ttop: aircraft_width / 2,\n\t\t\t\tleft: direction == \"back\" ? 0 : aircraft_width,\n\t\t\t\theight:\n\t\t\t\t\tdirection == \"front\"\n\t\t\t\t\t\t? front_thrust_components.value.total * thrustScaler\n\t\t\t\t\t\t: back_thrust_components.value.total * thrustScaler,\n\t\t\t};\n\t\t});\n\t\treturn forceVectorStyle;\n\t};\n\n\treturn (\n\t\t<Background style={animatedBackground}>\n\t\t\t<Fulselage />\n\t\t\t<AircraftComp style={get_aircraft_style(\"back\")} />\n\t\t\t<AircraftComp style={get_aircraft_style(\"front\")} />\n\t\t\t<ForceBox style={animatedVectorBox}>\n\t\t\t\t<DirectionVector\n\t\t\t\t\tstyle={getVectorComponentStyle(\"back\", \"vertical\")}\n\t\t\t\t/>\n\t\t\t\t<DirectionVector\n\t\t\t\t\tstyle={getVectorComponentStyle(\"back\", \"horizontal\")}\n\t\t\t\t/>\n\t\t\t</ForceBox>\n\t\t\t<ForceBox style={animatedFrontVectorBox}>\n\t\t\t\t<DirectionVector\n\t\t\t\t\tstyle={getVectorComponentStyle(\"front\", \"vertical\")}\n\t\t\t\t/>\n\t\t\t\t<DirectionVector\n\t\t\t\t\tstyle={getVectorComponentStyle(\"front\", \"horizontal\")}\n\t\t\t\t/>\n\t\t\t</ForceBox>\n\t\t\t<ForceVector style={get_force_vector_style(\"back\")} />\n\t\t\t<ForceVector style={get_force_vector_style(\"front\")} />\n\t\t</Background>\n\t);\n};\n\nconst stator_width = 11;\nconst aircraft_width = 40;\n\nconst Background = styled(Animated.View)`\n\twidth: ${aircraft_width}px;\n\theight: ${aircraft_width}px;\n\tborder-radius: ${aircraft_width / 2}px;\n\tposition: absolute;\n\tflex-direction: row;\n`;\n\nconst Fulselage = styled.View`\n\tposition: absolute;\n\ttop: ${aircraft_width / 2 - 2}px;\n\twidth: ${aircraft_width}px;\n\theight: 4px;\n\tbackground-color: black;\n`;\n\nconst AircraftComp = styled(Animated.View)`\n\tposition: absolute;\n\twidth: ${stator_width}px;\n\theight: ${stator_width}px;\n\tborder-radius: ${stator_width / 2}px;\n\tborder-width: 1px;\n\tborder-color: black;\n\tbackground-color: white;\n`;\n\nconst ForceBox = styled(Animated.View)`\n\tposition: absolute;\n`;\n\nconst ForceVector = styled(Animated.View)`\n\tposition: absolute;\n\twidth: 1px;\n\tbackground-color: black;\n`;\n\nconst DirectionVector = styled(Animated.View)`\n\tbackground-color: black;\n\topacity: 0.3;\n\tposition: absolute;\n`;\n\nexport default Aircraft;\n","/* export const colors = {\n\tgrey: \"#D9D9D9\",\n};\n\n// export const maxForce = 20; // kg m+2 s-2\n\nexport const gravitational_constant = 6.6743 * Math.pow(10, -11); // m3 kg-1 s-2\nexport const earth_mass = 5.972 * Math.pow(10, 24); // kg\nexport const earth_radius = 6371000; // m\nexport const aircraft_mass = 1; // kg */\n\nexport const LAT_DISTANCE = 50;\nexport const LON_DISTANCE = 50;\n\nexport const MAX_THRUST = 20;\nexport const MAX_THRUST_PER_SIDE = MAX_THRUST / 2;\n\nexport const margin = 30;\n\nexport const HOVER_THRUST = 9.81 / 2;\nexport const thrust_differential = HOVER_THRUST; // Math.min(MAX_THRUST_PER_SIDE, 9.81 / 2);\n\n/* \ndef calculate_gravity(mass, altitude):\n    gravitational_constant = -astro.G\n    earth_mass = astro.M_earth.value * astro.M_earth.unit\n    earth_radius = u.earthRad.to(u.m) * u.m\n\n    gravity = ((gravitational_constant * earth_mass * mass) /\n               (earth_radius + altitude)**2)\n\n    return gravity\n*/\n","export const round = (num: number, digits: number = 4) => {\n\t\"worklet\";\n\tif (digits == 4) {\n\t\treturn Math.round(num * 10000) / 10000;\n\t} else return Math.round(num * 100) / 100;\n};\n\nexport const adjust_for_horizontal = (\n\tthrust_total: number,\n\tpitch_angle: number\n) => {\n\t\"worklet\";\n\treturn round(thrust_total / Math.cos((pitch_angle * Math.PI) / 180));\n};\n","import React from \"react\";\nimport { Text, View } from \"react-native\";\nimport { AnimatedText } from \"react-native-wagmi-charts\";\nimport styled from \"styled-components/native\";\nimport { margin } from \"../../constants\";\nimport { DataboxProps } from \"./DataPanel\";\n\ninterface Props {\n\tdata: DataboxProps;\n}\n\nconst Databox: React.FC<Props> = ({ data }) => {\n\treturn (\n\t\t<Background>\n\t\t\t<Header>{data[\"header\"]}</Header>\n\t\t\t<Row>\n\t\t\t\t<Column>\n\t\t\t\t\t{data.titles.map((title, idx) => {\n\t\t\t\t\t\treturn <Text key={idx}>{title}</Text>;\n\t\t\t\t\t})}\n\t\t\t\t</Column>\n\t\t\t\t<View style={{ width: margin / 2 }} />\n\t\t\t\t<Column style={{ width: 70 }}>\n\t\t\t\t\t{data.values.map((value, idx) => {\n\t\t\t\t\t\treturn <AnimatedText text={value} key={idx} />;\n\t\t\t\t\t})}\n\t\t\t\t</Column>\n\t\t\t</Row>\n\t\t</Background>\n\t);\n};\n\nconst Background = styled.View`\n\tpadding: ${margin / 3}px ${margin / 2}px;\n\tborder-width: 1px;\n\tborder-color: #00000015;\n\tborder-radius: 25px;\n`;\n\nconst Header = styled.Text`\n\tfont-size: 20px;\n`;\n\nconst Row = styled.View`\n\tflex-direction: row;\n`;\n\nconst Column = styled.View``;\n\nexport default Databox;\n","import React from \"react\";\nimport { Text } from \"react-native\";\nimport Animated, {\n\tuseAnimatedStyle,\n\tuseDerivedValue\n} from \"react-native-reanimated\";\nimport { AnimatedText } from \"react-native-wagmi-charts\";\nimport styled from \"styled-components/native\";\nimport { round } from \"../../calculations/common\";\nimport { margin } from \"../../constants\";\nimport { DimensionData, PitchProps, ThrustProps } from \"../FlightWrapper\";\nimport Databox from \"./Databox\";\n\nexport interface DataboxProps {\n\theader: string;\n\ttitles: string[];\n\tvalues: Readonly<Animated.SharedValue<string>>[];\n}\n\ninterface Props {\n\tclock: Animated.SharedValue<number>;\n\tfront_thrust_components: Animated.SharedValue<ThrustProps>;\n\tback_thrust_components: Animated.SharedValue<ThrustProps>;\n\tvertical: Animated.SharedValue<DimensionData>;\n\thorizontal: Animated.SharedValue<DimensionData>;\n\tpitch: Animated.SharedValue<PitchProps>;\n\t/* \tprediction: Animated.SharedValue<{\n\t\taltitude: number;\n\t\tdistance: number;\n\t}>; */\n\n\tmode: Animated.SharedValue<string>;\n}\n\nconst DataPanel: React.FC<Props> = ({\n\tclock,\n\tfront_thrust_components,\n\tback_thrust_components,\n\tvertical,\n\thorizontal,\n\tpitch,\n\t/* prediction, */\n\tmode,\n}) => {\n\tconst tClock = useDerivedValue(() => round(clock.value, 2).toString());\n\n\tconst fThrust = useDerivedValue(() =>\n\t\tfront_thrust_components.value.total.toString()\n\t);\n\tconst bThrust = useDerivedValue(() =>\n\t\tback_thrust_components.value.total.toString()\n\t);\n\tconst totalThrust = useDerivedValue(() =>\n\t\t(\n\t\t\tback_thrust_components.value.total +\n\t\t\tfront_thrust_components.value.total\n\t\t).toString()\n\t);\n\n\tconst verticalThrust = useDerivedValue(() =>\n\t\t(\n\t\t\tfront_thrust_components.value.vertical +\n\t\t\tback_thrust_components.value.vertical\n\t\t).toString()\n\t);\n\tconst horizontalThrust = useDerivedValue(() =>\n\t\t(\n\t\t\tfront_thrust_components.value.horizontal +\n\t\t\tback_thrust_components.value.horizontal\n\t\t).toString()\n\t);\n\n\tconst vAccel = useDerivedValue(() =>\n\t\tvertical.value.acceleration.toString()\n\t);\n\tconst vVelo = useDerivedValue(() => vertical.value.velocity.toString());\n\tconst vDist = useDerivedValue(() => vertical.value.distance.toString());\n\n\tconst hAccel = useDerivedValue(() =>\n\t\thorizontal.value.acceleration.toString()\n\t);\n\tconst hVelo = useDerivedValue(() => horizontal.value.velocity.toString());\n\tconst hDist = useDerivedValue(() => horizontal.value.distance.toString());\n\n\tconst pAccel = useDerivedValue(() => pitch.value.acceleration.toString());\n\tconst pVelo = useDerivedValue(() => pitch.value.velocity.toString());\n\tconst pDeg = useDerivedValue(() => pitch.value.angle.toString());\n\n\t/* \tconst defaultAltitude = useDerivedValue(() =>\n\t\tprediction.value.altitude.toString()\n\t);\n\tconst defaultDistance = useDerivedValue(() =>\n\t\tprediction.value.distance.toString()\n\t); */\n\n\tconst getBoxStyle = (mode_val: string) => {\n\t\tconst landingStyle = useAnimatedStyle(() => {\n\t\t\treturn {\n\t\t\t\tbackgroundColor:\n\t\t\t\t\tmode.value == mode_val ? \"white\" : \"transparent\",\n\t\t\t\topacity: mode.value == mode_val ? 1 : 0.2,\n\t\t\t};\n\t\t});\n\t\treturn landingStyle;\n\t};\n\n\tconst data: DataboxProps[] = [\n\t\t{\n\t\t\theader: \"Thrust\",\n\t\t\ttitles: [\"Front Thrust\", \"Back Thrust\", \"Total Thrust\"],\n\t\t\tvalues: [fThrust, bThrust, totalThrust],\n\t\t},\n\t\t{\n\t\t\theader: \"Dimensions\",\n\t\t\ttitles: [\"Vertical\", \"Horizontal\", \"Total\"],\n\t\t\tvalues: [verticalThrust, horizontalThrust, totalThrust],\n\t\t},\n\t\t/* {\n\t\t\theader: \"Prediction\",\n\t\t\ttitles: [\"Altitude\", \"Distance\"],\n\t\t\tvalues: [defaultAltitude, defaultDistance],\n\t\t}, */\n\t\t{\n\t\t\theader: \"Vertical\",\n\t\t\ttitles: [\"Acceleration\", \"Velocity\", \"Distance\"],\n\t\t\tvalues: [vAccel, vVelo, vDist],\n\t\t},\n\t\t{\n\t\t\theader: \"Horizontal\",\n\t\t\ttitles: [\"Acceleration\", \"Velocity\", \"Distance\"],\n\t\t\tvalues: [hAccel, hVelo, hDist],\n\t\t},\n\t\t{\n\t\t\theader: \"Pitch\",\n\t\t\ttitles: [\"Acceleration\", \"Velocity\", \"Angle\"],\n\t\t\tvalues: [pAccel, pVelo, pDeg],\n\t\t},\n\t];\n\treturn (\n\t\t<Background>\n\t\t\t<Row>\n\t\t\t\t<Databox data={data[0]} />\n\t\t\t\t<Spacer />\n\t\t\t\t<Databox data={data[1]} />\n\t\t\t\t<Spacer />\n\t\t\t\t<Databox data={data[2]} />\n\t\t\t</Row>\n\t\t\t<Spacer />\n\t\t\t<Row>\n\t\t\t\t<ClockBox>\n\t\t\t\t\t<Clock text={tClock} />\n\t\t\t\t\t<Text style={{ fontSize: 24 }}>s</Text>\n\t\t\t\t</ClockBox>\n\n\t\t\t\t<Spacer />\n\t\t\t\t<Databox data={data[3]} />\n\t\t\t\t<Spacer />\n\t\t\t\t<Databox data={data[4]} />\n\t\t\t\t{/* \t<Spacer />\n\t\t\t\t<Databox data={data[5]} /> */}\n\t\t\t</Row>\n\t\t\t<Spacer />\n\t\t\t<Row>\n\t\t\t\t<FlightMode style={getBoxStyle(\"takeoff\")}>\n\t\t\t\t\t<Text>Takeoff</Text>\n\t\t\t\t</FlightMode>\n\t\t\t\t<FlightMode style={getBoxStyle(\"tilt_to_cruise\")}>\n\t\t\t\t\t<Text>Tilt to Cruise</Text>\n\t\t\t\t</FlightMode>\n\t\t\t\t<FlightMode style={getBoxStyle(\"cruise\")}>\n\t\t\t\t\t<Text>Cruise</Text>\n\t\t\t\t</FlightMode>\n\t\t\t\t<FlightMode style={getBoxStyle(\"spin\")}>\n\t\t\t\t\t<Text>Spin</Text>\n\t\t\t\t</FlightMode>\n\t\t\t\t<FlightMode style={getBoxStyle(\"reverse_cruise\")}>\n\t\t\t\t\t<Text>Reverse Cruise</Text>\n\t\t\t\t</FlightMode>\n\t\t\t\t<FlightMode style={getBoxStyle(\"tilt_to_land\")}>\n\t\t\t\t\t<Text>Tilt to Land</Text>\n\t\t\t\t</FlightMode>\n\t\t\t\t<FlightMode style={getBoxStyle(\"landing\")}>\n\t\t\t\t\t<Text>Landing</Text>\n\t\t\t\t</FlightMode>\n\t\t\t</Row>\n\t\t</Background>\n\t);\n};\n\nconst Background = styled.View`\n\tpadding: ${margin / 2}px;\n`;\n\nconst Row = styled.View`\n\tflex-direction: row;\n\talign-items: flex-end;\n`;\n\nconst FlightMode = styled(Animated.View)`\n\tborder-color: black;\n\tborder-width: 1px;\n\tpadding: ${margin / 2}px;\n\tflex: 1;\n`;\n\nconst ClockBox = styled.View`\n\talign-items: center;\n\tjustify-content: center;\n\tflex-direction: row;\n\tpadding: ${margin}px;\n`;\n\nconst Clock = styled(AnimatedText)`\n\tfont-size: 24px;\n\twidth: 65px;\n`;\n\nconst Spacer = styled.View`\n\twidth: ${margin / 2}px;\n\theight: ${margin / 2}px;\n`;\n\nexport default DataPanel;\n","import React from \"react\";\nimport { useWindowDimensions } from \"react-native\";\nimport Animated, { useAnimatedStyle } from \"react-native-reanimated\";\nimport styled from \"styled-components/native\";\nimport { LAT_DISTANCE, LON_DISTANCE } from \"../constants\";\nimport { DimensionData } from \"./FlightWrapper\";\n\ninterface Props {\n\t/* \tgrid_move: boolean; */\n\tvertical: Animated.SharedValue<DimensionData>;\n\thorizontal: Animated.SharedValue<DimensionData>;\n}\n\nconst Grid: React.FC<Props> = ({ /* grid_move, */ vertical, horizontal }) => {\n\tconst { height, width } = useWindowDimensions();\n\n\tconst getLatitudeStyle = (e: number) => {\n\t\t\"worklet\";\n\t\tconst style = useAnimatedStyle(() => {\n\t\t\treturn {\n\t\t\t\ttop: 0.5 * height - e * LAT_DISTANCE,\n\t\t\t\theight: 1,\n\t\t\t\twidth: width / 2,\n\t\t\t\tbackgroundColor: \"black\",\n\t\t\t\topacity: 0.3,\n\t\t\t};\n\t\t});\n\t\treturn style;\n\t};\n\n\tconst getLatitudeTextStyle = (e: number) => {\n\t\t\"worklet\";\n\t\tconst style = useAnimatedStyle(() => {\n\t\t\treturn {\n\t\t\t\ttop: 0.5 * height - 8 - e * LAT_DISTANCE,\n\t\t\t\tleft: -80,\n\t\t\t\twidth: width / 2,\n\t\t\t\tfontSize: 20,\n\t\t\t\tposition: \"absolute\",\n\t\t\t};\n\t\t});\n\t\treturn style;\n\t};\n\n\tconst getLongitudeStyle = (e: number) => {\n\t\tconst style = useAnimatedStyle(() => {\n\t\t\treturn {\n\t\t\t\tleft: e * LON_DISTANCE,\n\t\t\t\theight: height / 2,\n\t\t\t\twidth: 1,\n\t\t\t\tbackgroundColor: \"black\",\n\t\t\t\topacity: 0.3,\n\t\t\t\tposition: \"absolute\",\n\t\t\t};\n\t\t});\n\t\treturn style;\n\t};\n\n\tconst getLongitudeTextStyle = (e: number) => {\n\t\tconst style = useAnimatedStyle(() => {\n\t\t\treturn {\n\t\t\t\ttop: height / 2 + 30,\n\t\t\t\tleft: -8 + e * LON_DISTANCE,\n\t\t\t\theight: height / 2,\n\t\t\t\tfontSize: 20,\n\t\t\t\tposition: \"absolute\",\n\t\t\t};\n\t\t});\n\t\treturn style;\n\t};\n\n\tconst animatedLatitudeStyle = useAnimatedStyle(() => {\n\t\treturn {\n\t\t\ttop: /*  grid_move ? (vertical.value.distance / 10) * LON_DISTANCE :  */ 0,\n\t\t};\n\t});\n\n\tconst animatedLongitudeStyle = useAnimatedStyle(() => {\n\t\treturn {\n\t\t\tleft: /*  grid_move\n\t\t\t\t? -(horizontal.value.distance / 10) * LAT_DISTANCE\n\t\t\t\t: */ 0,\n\t\t};\n\t});\n\n\tconst animatedLongitudeTextStyle = useAnimatedStyle(() => {\n\t\treturn {\n\t\t\tleft:\n\t\t\t\t/* grid_move\n\t\t\t\t? width / 2 - (horizontal.value.distance / 10) * LAT_DISTANCE\n\t\t\t\t: */ width / 2,\n\t\t};\n\t});\n\n\tconst AbsoluteBackground = styled(Animated.View)`\n\t\tposition: absolute;\n\t\theight: ${height / 2 + 1}px;\n\t\twidth: ${width / 2}px;\n\t\tleft: ${width / 2 - 1}px;\n\t\toverflow: hidden;\n\t`;\n\n\tconst Longitudes = styled(Animated.View)`\n\t\tposition: absolute;\n\t\theight: ${height / 2}px;\n\t\twidth: ${width / 2}px;\n\t`;\n\n\tconst Latitudes = styled(Animated.View)`\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\theight: ${height / 2}px;\n\t\twidth: ${width / 2}px;\n\t`;\n\n\treturn (\n\t\t<>\n\t\t\t<AbsoluteBackground>\n\t\t\t\t{/* <View\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\t\twidth: 1,\n\t\t\t\t\t\theight: height / 2,\n\t\t\t\t\t\tbackgroundColor: \"black\",\n\t\t\t\t\t}}\n\t\t\t\t/> */}\n\n\t\t\t\t<Latitudes style={animatedLatitudeStyle}>\n\t\t\t\t\t{[...Array(100).keys()].map((index) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Animated.View\n\t\t\t\t\t\t\t\tstyle={getLatitudeStyle(index)}\n\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</Latitudes>\n\t\t\t\t<Longitudes style={animatedLongitudeStyle}>\n\t\t\t\t\t{[...Array(100).keys()].map((index) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Animated.View\n\t\t\t\t\t\t\t\tstyle={getLongitudeStyle(index)}\n\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</Longitudes>\n\t\t\t</AbsoluteBackground>\n\t\t\t<Latitudes style={[animatedLatitudeStyle, { left: width / 2 }]}>\n\t\t\t\t{[...Array(100).keys()].map((index) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Animated.Text\n\t\t\t\t\t\t\tstyle={getLatitudeTextStyle(index)}\n\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{index * 10}\n\t\t\t\t\t\t</Animated.Text>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</Latitudes>\n\t\t\t<Longitudes style={animatedLongitudeTextStyle}>\n\t\t\t\t{[...Array(100).keys()].map((index) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Animated.Text\n\t\t\t\t\t\t\tstyle={getLongitudeTextStyle(index)}\n\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{index * 10}\n\t\t\t\t\t\t</Animated.Text>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</Longitudes>\n\t\t</>\n\t);\n};\n\nexport default Grid;\n","import React from \"react\";\nimport { useWindowDimensions } from \"react-native\";\nimport Animated, { useAnimatedStyle } from \"react-native-reanimated\";\nimport styled from \"styled-components/native\";\n\ninterface Props {\n\tclock: Animated.SharedValue<number>;\n}\n\nconst Slider: React.FC<Props> = ({ clock }) => {\n\tconst { width } = useWindowDimensions();\n\n\tconst clockBarStyle = useAnimatedStyle(() => {\n\t\treturn {\n\t\t\twidth: (clock.value / 20) * width,\n\t\t};\n\t});\n\n\treturn <Background style={clockBarStyle}></Background>;\n};\n\nconst Background = styled(Animated.View)`\n\theight: 2px;\n\tbackground-color: black;\n`;\n\nexport default Slider;\n","import React from \"react\";\nimport { Text, View } from \"react-native\";\nimport Animated from \"react-native-reanimated\";\nimport styled from \"styled-components/native\";\nimport { margin } from \"../constants\";\nimport Aircraft from \"./Aircraft\";\nimport DataPanel from \"./DataPanel/DataPanel\";\nimport { DimensionData, PitchProps, ThrustProps } from \"./FlightWrapper\";\nimport Grid from \"./Grid\";\nimport Slider from \"./Slider\";\n\ninterface Props {\n\tsetNavigation: React.Dispatch<React.SetStateAction<string>>;\n\tclock_running: Animated.SharedValue<boolean>;\n\tclock: Animated.SharedValue<number>;\n\tback_thrust_components: Animated.SharedValue<ThrustProps>;\n\tfront_thrust_components: Animated.SharedValue<ThrustProps>;\n\tvertical: Animated.SharedValue<DimensionData>;\n\thorizontal: Animated.SharedValue<DimensionData>;\n\tpitch: Animated.SharedValue<PitchProps>;\n\tmode: Animated.SharedValue<string>;\n}\n\nconst Flight: React.FC<Props> = ({\n\tsetNavigation,\n\tclock_running,\n\tclock,\n\tback_thrust_components,\n\tfront_thrust_components,\n\tvertical,\n\thorizontal,\n\tpitch,\n\tmode,\n}) => {\n\t\n\n\treturn (\n\t<>\n\t\t\t<Grid\n\t\t\t\t/*  {...{ grid_move }} */ {...{ vertical }}\n\t\t\t\t{...{ horizontal }}\n\t\t\t/>\n\t\t\t<Aircraft\n\t\t\t\t/* \t{...{ grid_move }} */\n\t\t\t\t{...{ vertical }}\n\t\t\t\t{...{ horizontal }}\n\t\t\t\t{...{ pitch }}\n\t\t\t\t{...{ back_thrust_components }}\n\t\t\t\t{...{ front_thrust_components }}\n\t\t\t/>\n\n\t\t\t<BackButton onPress={() => setNavigation(\"input\")}>\n\t\t\t\t<Text>x</Text>\n\t\t\t</BackButton>\n\t\t\t<View>\n\t\t\t\t<DataPanel\n\t\t\t\t\t{...{ clock }}\n\t\t\t\t\t{...{ front_thrust_components }}\n\t\t\t\t\t{...{ back_thrust_components }}\n\t\t\t\t\t{...{ vertical }}\n\t\t\t\t\t{...{ horizontal }}\n\t\t\t\t\t/* {...{ prediction }} */\n\t\t\t\t\t{...{ pitch }}\n\t\t\t\t\t{...{ mode }}\n\t\t\t\t/>\n\t\t\t\t<Slider {...{ clock }} />\n\t\t\t</View>\n\t\t\t</>\n\t);\n};\n\n\n\nconst BackButton = styled.TouchableOpacity`\n\theight: 50px;\n\twidth: 50px;\n\ttop: ${margin / 2}px;\n\tleft: ${margin / 2}px;\n\tjustify-content: center;\n\talign-items: center;\n\tbackground-color: white;\n\tborder-width: 1px;\n\tborder-color: black;\n`;\n\nexport default Flight;\n","import React from \"react\";\nimport { TouchableWithoutFeedback, useWindowDimensions } from \"react-native\";\nimport { Gesture, GestureDetector } from \"react-native-gesture-handler\";\nimport Animated, {\n\tcancelAnimation,\n\trunOnJS,\n\tuseAnimatedReaction,\n\tuseAnimatedStyle,\n\tuseSharedValue,\n\twithDecay\n} from \"react-native-reanimated\";\nimport styled from \"styled-components/native\";\nimport { FlightData, FlightOptions } from \"../../App\";\nimport { useClock } from \"../hooks/useClock\";\nimport Flight from \"./Flight\";\n\nexport interface ThrustProps {\n\ttotal: number;\n\tvertical: number;\n\thorizontal: number;\n}\n\nexport interface DimensionData {\n\tacceleration: number;\n\tvelocity: number;\n\tdistance: number;\n}\n\nexport interface PitchProps {\n\tacceleration: number;\n\tvelocity: number;\n\tdistance: number;\n\tangle: number;\n}\n\ninterface Props {\n\toptions: FlightOptions;\n\tdata: FlightData[];\n\tsetNavigation: React.Dispatch<React.SetStateAction<string>>;\n}\n\nconst FlightWrapper: React.FC<Props> = ({ setNavigation, options, data }) => {\n\tconst { width } = useWindowDimensions();\n\t/* const grid_move = false; */\n\n\tconst mode = useSharedValue(\"\");\n\n\tconst front_thrust_components = useSharedValue<ThrustProps>({\n\t\ttotal: 0,\n\t\tvertical: 0,\n\t\thorizontal: 0,\n\t});\n\tconst back_thrust_components = useSharedValue<ThrustProps>({\n\t\ttotal: 0,\n\t\tvertical: 0,\n\t\thorizontal: 0,\n\t});\n\tconst vertical = useSharedValue<DimensionData>({\n\t\tacceleration: 0,\n\t\tvelocity: 0,\n\t\tdistance: 0,\n\t});\n\tconst horizontal = useSharedValue<DimensionData>({\n\t\tacceleration: 0,\n\t\tvelocity: 0,\n\t\tdistance: 0,\n\t});\n\tconst pitch = useSharedValue<PitchProps>({\n\t\tacceleration: 0,\n\t\tvelocity: 0,\n\t\tdistance: 0,\n\t\tangle: 0,\n\t});\n\n\tconst prediction = useSharedValue({\n\t\taltitude: 0,\n\t\tdistance: 0,\n\t});\n\n\tconst clock_running = useSharedValue(true);\n\tconst clock = useSharedValue(0);\n\tconst _ = useClock(clock, clock_running);\n\n\tuseAnimatedReaction(\n\t\t() => clock.value,\n\t\t(clock) => {\n\t\t\tif (clock < 20) {\n\t\t\t\tconst rounded_clock = Math.round(clock * 100);\n\n\t\t\t\tmode.value = data[rounded_clock].mode;\n\t\t\t\tfront_thrust_components.value =\n\t\t\t\t\tdata[rounded_clock].frontThrustComponents;\n\t\t\t\tback_thrust_components.value =\n\t\t\t\t\tdata[rounded_clock].backThrustComponents;\n\t\t\t\tvertical.value = data[rounded_clock].vertical;\n\t\t\t\thorizontal.value = data[rounded_clock].horizontal;\n\t\t\t\tpitch.value = data[rounded_clock].pitch;\n\t\t\t\tprediction.value = data[rounded_clock].prediction;\n\n\t\t\t\tconsole.log(rounded_clock / 100, data[rounded_clock].logger);\n\n\t\t\t\t/* console.log(\n\t\t\t\t\trounded_clock,\n\t\t\t\t\tback_thrust_components.value.total,\n\t\t\t\t\tfront_thrust_components.value.total,\n\t\t\t\t\tpitch.value.acceleration,\n\t\t\t\t\tpitch.value.velocity,\n\t\t\t\t\tdata[rounded_clock].logger\n\t\t\t\t\t//logger[rounded_clock]\n\t\t\t\t); */\n\n\t\t\t\t/* text.value = {\n\t\t\t\t\tvertical: {\n\t\t\t\t\t\tacceleration: vertical.value.acceleration.toString(),\n\t\t\t\t\t\tvelocity: vertical.value.velocity.toString(),\n\t\t\t\t\t\tdistance: vertical.value.distance.toFixed(4),\n\t\t\t\t\t},\n\t\t\t\t}; */\n\t\t\t}\n\t\t}\n\t);\n\n\tconst start_clock = useSharedValue(0);\n\tconst active = useSharedValue(false);\n\t/* const panGesture = Gesture.Pan()\n\t\t.onBegin((e) => {\n\t\t\tstart_clock.value = clock.value;\n\t\t\tif (clock_running.value) {\n\t\t\t\tclock_running.value = false;\n\t\t\t\tcancelAnimation(clock);\n\t\t\t}\n\t\t})\n\t\t.onChange((e) => {\n\t\t\tactive.value = true;\n\t\t\tlet drag_clock = start_clock.value + e.translationX * (20 / width);\n\t\t\tlet clamped_drag_clock = Math.max(0, Math.min(drag_clock, 2000));\n\t\t\tclock.value = clamped_drag_clock;\n\t\t})\n\t\t.onFinalize(() => {\n\t\t\tactive.value = false;\n\t\t})\n\t\t.onEnd((e) => {\n\t\t\tclock.value = withDecay({\n\t\t\t\tvelocity: e.velocityX / 80,\n\t\t\t\tclamp: [0, 20],\n\t\t\t});\n\t\t}); */\n\n\tconst panGesture = Gesture.Pan()\n\t\t.onBegin((e) => {\n\t\t\tstart_clock.value = clock.value;\n\t\t\tif (clock_running.value) {\n\t\t\t\tclock_running.value = false;\n\t\t\t\tcancelAnimation(clock);\n\t\t\t}\n\t\t})\n\t\t.onChange((e) => {\n\t\t\tactive.value = true;\n\t\t\tlet drag_clock = start_clock.value + e.translationX * (20 / width);\n\t\t\tlet clamped_drag_clock = Math.max(0, Math.min(drag_clock, 2000));\n\t\t\tclock.value = clamped_drag_clock;\n\t\t})\n\t\t.onFinalize(() => {\n\t\t\tactive.value = false;\n\t\t})\n\t\t.onEnd((e) => {\n\t\t\tclock.value = withDecay({\n\t\t\t\tvelocity: e.velocityX / 80,\n\t\t\t\tclamp: [0, 20], // optionally define boundaries for the animation\n\t\t\t});\n\t\t});\n\n\tconst toggle_clock_running = () => {\n\t\t\"worklet\";\n\t\tif (clock_running.value) {\n\t\t\tclock_running.value = false;\n\t\t\tcancelAnimation(clock);\n\t\t} else clock_running.value = !clock_running.value;\n\t};\n\n\tconst animatedBackgroundStyle = useAnimatedStyle(() => {\n\t\treturn {\n\t\t\t//\tbackgroundColor: clock_running.value == true ? \"white\" : \"#e2e2e5\",\n\t\t};\n\t}, [clock_running]);\n\n\treturn (\n\t\t<GestureDetector gesture={panGesture}>\n\t\t\t<TouchableWithoutFeedback\n\t\t\t\tonPress={() => {\n\t\t\t\t\trunOnJS(toggle_clock_running)();\n\t\t\t\t\tconsole.log(\"click...\");\n\t\t\t\t}}\n\t\t\t\tstyle={{\n\t\t\t\t\tbackgroundColor: \"red\",\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Background style={animatedBackgroundStyle}>\n\t\t\t\t\t<Flight\n\t\t\t\t\t\t{...{ setNavigation }}\n\t\t\t\t\t\t{...{ clock_running }}\n\t\t\t\t\t\t{...{ clock }}\n\t\t\t\t\t\t{...{ vertical }}\n\t\t\t\t\t\t{...{ horizontal }}\n\t\t\t\t\t\t{...{ front_thrust_components }}\n\t\t\t\t\t\t{...{ back_thrust_components }}\n\t\t\t\t\t\t{...{ pitch }}\n\t\t\t\t\t\t{...{ mode }}\n\t\t\t\t\t/>\n\t\t\t\t</Background>\n\t\t\t</TouchableWithoutFeedback>\n\t\t</GestureDetector>\n\t);\n};\n\nconst Background = styled(Animated.View)`\n\tjustify-content: space-between;\n\tflex: 1;\n`;\n\nexport default FlightWrapper;\n","import Animated, {\n\tEasing,\n\tuseAnimatedReaction,\n\tuseDerivedValue,\n\tuseSharedValue,\n\twithTiming\n} from \"react-native-reanimated\";\n\nexport const useClock = (\n\tclock: Animated.SharedValue<number>,\n\tclock_running: Animated.SharedValue<boolean>\n) => {\n\tconst runClock = () => {\n\t\t\"worklet\";\n\t\tconst NR_OF_SEC = 20;\n\t\tclock.value = withTiming(\n\t\t\tNR_OF_SEC,\n\t\t\t{\n\t\t\t\tduration: NR_OF_SEC * 1000 - clock.value,\n\t\t\t\teasing: Easing.linear,\n\t\t\t},\n\t\t\t(finished) => {\n\t\t\t\tif (finished === true) {\n\t\t\t\t\tclock.value = 0;\n\t\t\t\t\t//\tclock_running.value = false\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t};\n\n\tuseAnimatedReaction(\n\t\t() => clock_running.value,\n\t\t(clock_running) => {\n\t\t\tif (clock_running) {\n\t\t\t\trunClock();\n\t\t\t}\n\t\t}\n\t);\n\n\tconst formatedClock = useDerivedValue(() => {\n\t\treturn Number((Math.round(clock.value * 100) / 100).toFixed(2));\n\t});\n\n\tconst resultClock = useSharedValue(0);\n\tuseAnimatedReaction(\n\t\t() => formatedClock.value > resultClock.value,\n\t\t(isNew) => {\n\t\t\tif (isNew) resultClock.value = formatedClock.value;\n\t\t}\n\t);\n\treturn resultClock;\n};\n","import { HOVER_THRUST, MAX_THRUST, MAX_THRUST_PER_SIDE } from \"../constants\";\nimport { adjust_for_horizontal, round } from \"./common\";\n\nexport const runLanding = (\n\tengines_running: boolean,\n\tvertical: {\n\t\tacceleration: number;\n\t\tvelocity: number;\n\t\tdistance: number;\n\t},\n\tthrust: {\n\t\tfront: number;\n\t\tback: number;\n\t},\n\tpitch: {\n\t\tacceleration: number;\n\t\tvelocity: number;\n\t\tdistance: number;\n\t\tangle: number;\n\t},\n\t/* front_thrust: number,\n\tback_thrust: number,\n\tpitch_angle: number, */\n\tlogger: string\n) => {\n\t//START ENGINES\n\tif (!engines_running) {\n\t\tconst potAcceleration = MAX_THRUST - 9.81;\n\t\tlet potVelocity = vertical.velocity;\n\t\tlet potAltitude = vertical.distance;\n\t\tfor (let j = 0; j <= 2000; j++) {\n\t\t\tpotVelocity = potVelocity + potAcceleration / 100;\n\t\t\tpotAltitude = potAltitude + potVelocity / 100;\n\t\t\tif (potAltitude <= 0) {\n\t\t\t\tengines_running = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Speed Correction\n\tif (vertical.velocity > 0 && vertical.acceleration == 0) {\n\t\tconst correction_thrust = round(\n\t\t\t(-vertical.velocity / 2) * 100 + 9.81 / 2\n\t\t);\n\n\t\tthrust.front = Math.min(correction_thrust, MAX_THRUST_PER_SIDE);\n\t\tthrust.back = Math.min(correction_thrust, MAX_THRUST_PER_SIDE);\n\t\tconsole.log(\"speed correct\", correction_thrust);\n\t}\n\n\t//IDLE\n\telse if (engines_running && vertical.velocity >= 0) {\n\t\tthrust.front = adjust_for_horizontal(HOVER_THRUST, pitch.angle);\n\t\tthrust.back = adjust_for_horizontal(HOVER_THRUST, pitch.angle);\n\t}\n\n\t//BREAK\n\telse if (engines_running) {\n\t\tlogger = \"yessss\";\n\t\tthrust.front = adjust_for_horizontal(MAX_THRUST_PER_SIDE, pitch.angle);\n\t\tthrust.back = adjust_for_horizontal(MAX_THRUST_PER_SIDE, pitch.angle);\n\t}\n\n\t//FREE FALL\n\telse {\n\t\tthrust.front = 0;\n\t\tthrust.back = 0;\n\t}\n\n\treturn {\n\t\tengines_running,\n\t\tvertical,\n\t\tthrust,\n\t\tpitch,\n\t\tlogger,\n\t};\n};\n","import { DimensionData, PitchProps } from \"../Flight/FlightWrapper\";\nimport { adjust_for_horizontal, round } from \"./common\";\n\nexport const reverse_cruise = (\n\tthrust: { front: number; back: number },\n\tvertical: DimensionData,\n\thorizontal: DimensionData,\n\tpitch: PitchProps,\n\tmode: string,\n\tlogger: string\n) => {\n\tlogger = horizontal.velocity + \"\";\n\n\t//tilt_to_land();\n\n\tif (horizontal.velocity <= 0) {\n\t\tmode = \"tilt_to_land\";\n\t}\n\n\tconst correction_thrust = round((-vertical.velocity / 2) * 100 + 9.81 / 2);\n\n\tthrust.front = adjust_for_horizontal(correction_thrust, pitch.angle);\n\tthrust.back = adjust_for_horizontal(correction_thrust, pitch.angle);\n\n\treturn { thrust, vertical, horizontal, pitch, mode, logger };\n};\n","import { HOVER_THRUST, thrust_differential } from \"../constants\";\nimport { adjust_for_horizontal, round } from \"./common\";\n\nexport const spin = (\n\ttilting: boolean,\n\tmode: string,\n\tpitch: {\n\t\tacceleration: number;\n\t\tvelocity: number;\n\t\tdistance: number;\n\t\tangle: number;\n\t},\n\tthrust: {\n\t\tfront: number;\n\t\tback: number;\n\t},\n\tlogger: string\n) => {\n\t//\tlogger = pitch.acceleration + \" \" + pitch.velocity + \" \" + pitch.angle;\n\n\tconst cutoff_point = 0;\n\t//TILT CUTTOFF\n\tif (tilting) {\n\t\tif (pitch.angle <= cutoff_point) {\n\t\t\ttilting = false;\n\t\t}\n\t}\n\n\t//SWITCH TO TILT TO LAND 2\n\tif (\n\t\tpitch.angle < cutoff_point &&\n\t\tpitch.velocity == 0 &&\n\t\tpitch.acceleration == 0\n\t) {\n\t\tlogger = \"switch........\";\n\t\tmode = \"reverse_cruise\";\n\t\ttilting = true;\n\t}\n\n\t// Pitch Speed Correction\n\telse if (pitch.velocity > 0 && pitch.acceleration == 0) {\n\t\tlogger = logger + \"correct...\";\n\n\t\tconst correction_thrust = round(pitch.velocity * 100);\n\n\t\tthrust.front =\n\t\t\tadjust_for_horizontal(HOVER_THRUST, pitch.angle) +\n\t\t\tcorrection_thrust / 2;\n\t\tthrust.back =\n\t\t\tadjust_for_horizontal(HOVER_THRUST, pitch.angle) -\n\t\t\tcorrection_thrust / 2;\n\t}\n\n\t// Idle\n\telse if (pitch.angle <= -cutoff_point && pitch.velocity >= 0) {\n\t\tthrust.front = adjust_for_horizontal(HOVER_THRUST, pitch.angle);\n\t\tthrust.back = adjust_for_horizontal(HOVER_THRUST, pitch.angle);\n\t}\n\n\t// Reverse Thrust\n\telse if (!tilting && pitch.angle <= cutoff_point) {\n\t\tthrust.front = adjust_for_horizontal(\n\t\t\tHOVER_THRUST - thrust_differential,\n\t\t\tpitch.angle\n\t\t);\n\t\tthrust.back = adjust_for_horizontal(\n\t\t\tHOVER_THRUST + thrust_differential,\n\t\t\tpitch.angle\n\t\t);\n\t}\n\n\t// Thrust\n\telse {\n\t\tthrust.front = adjust_for_horizontal(\n\t\t\tHOVER_THRUST + thrust_differential,\n\t\t\tpitch.angle\n\t\t);\n\t\tthrust.back = adjust_for_horizontal(\n\t\t\tHOVER_THRUST - thrust_differential,\n\t\t\tpitch.angle\n\t\t);\n\t}\n\n\treturn {\n\t\tlogger,\n\t\ttilting,\n\t\tmode,\n\t\tpitch,\n\t\tthrust,\n\t};\n};\n","import { FlightOptions } from \"../../App\";\nimport { MAX_THRUST_PER_SIDE } from \"../constants\";\nimport { round } from \"./common\";\n\nexport const runTakeoff = (\n\toptions: FlightOptions,\n\tvertical: {\n\t\tacceleration: number;\n\t\tvelocity: number;\n\t\tdistance: number;\n\t},\n\tthrust: {\n\t\tfront: number;\n\t\tback: number;\n\t},\n\tlogger: string,\n\tmode: string,\n\tdefaultAltitude: number\n) => {\n\t\"worklet\";\n\n\t// CALCULATE ALTITUDE ON CUTTOFF\n\tconst potAcceleration = -9.81;\n\tlet potVelocity = vertical.velocity;\n\tlet potAltitude = vertical.distance;\n\tlet max_altitude = -100000000;\n\tfor (let i = 0; i <= 2000; i++) {\n\t\tpotVelocity = potVelocity + potAcceleration / 100;\n\t\tpotAltitude = potAltitude + potVelocity / 100;\n\t\tif (potAltitude > max_altitude) max_altitude = round(potAltitude);\n\t}\n\tdefaultAltitude = max_altitude;\n\t/* \n\t// Switch to Cruise\n\tif (\n\t\tvertical.distance >= options.targetAltitude * 0.5 &&\n\t\tvertical.velocity == 0 &&\n\t\tvertical.acceleration == 0\n\t) {\n\t\tmode = \"tilt_to_cruise\";\n\t}\n\n\t// Speed Correction\n\tif (vertical.velocity < 0 && vertical.acceleration == 0) {\n\t\tconst correction_thrust = round(\n\t\t\t(-vertical.velocity / 2) * 100 + 9.81 / 2\n\t\t);\n\n\t\tthrust.front = Math.min(correction_thrust, MAX_THRUST_PER_SIDE);\n\t\tthrust.back = Math.min(correction_thrust, MAX_THRUST_PER_SIDE);\n\t\tconsole.log(\"speed correct\", correction_thrust);\n\t}\n\n\t//  Thrust\n\telse if (defaultAltitude <= options.targetAltitude * 0.8) {\n\t\tthrust.front = MAX_THRUST_PER_SIDE;\n\t\tthrust.back = MAX_THRUST_PER_SIDE;\n\t}\n\n\t// Hover\n\telse if (defaultAltitude <= options.targetAltitude) {\n\t\tthrust.front = HOVER_THRUST;\n\t\tthrust.back = HOVER_THRUST;\n\t}\n\n\t// Free Fall\n\telse {\n\t\tthrust.front = 0;\n\t\tthrust.back = 0;\n\t}\n */\n\tif (vertical.velocity <= 0 && vertical.distance >= options.targetAltitude) {\n\t\tmode = \"tilt_to_cruise\";\n\t} else if (defaultAltitude >= options.targetAltitude) {\n\t\tthrust.front = 0;\n\t\tthrust.back = 0;\n\t} else {\n\t\tthrust.front = MAX_THRUST_PER_SIDE;\n\t\tthrust.back = MAX_THRUST_PER_SIDE;\n\t}\n\tlogger = defaultAltitude + \"\";\n\n\treturn {\n\t\tthrust,\n\t\tlogger,\n\t\tmode,\n\t\tvertical,\n\t\tdefaultAltitude,\n\t};\n};\n","import { FlightOptions } from \"../../App\";\nimport { HOVER_THRUST, thrust_differential } from \"../constants\";\nimport { DimensionData, PitchProps } from \"../Flight/FlightWrapper\";\nimport { adjust_for_horizontal, round } from \"./common\";\n\nexport const runTiltToCruise = (\n\toptions: FlightOptions,\n\ttilting: boolean,\n\tpitch: PitchProps,\n\tvertical: DimensionData,\n\tmode: string,\n\tthrust: {\n\t\tfront: number;\n\t\tback: number;\n\t},\n\tlogger: string\n) => {\n\t//TILT CUTTOFF\n\tif (tilting) {\n\t\tconst potPitchAcceleration = adjust_for_horizontal(\n\t\t\t-thrust_differential * 2,\n\t\t\tpitch.angle\n\t\t);\n\t\tlogger = potPitchAcceleration + \"\";\n\t\tlet potPitchVelocity = pitch.velocity;\n\t\tlet potPitchDistance = pitch.distance;\n\t\tfor (let j = 0; j <= 2000; j++) {\n\t\t\tpotPitchVelocity = potPitchVelocity + potPitchAcceleration / 100;\n\t\t\tpotPitchDistance = potPitchDistance + potPitchVelocity / 100;\n\t\t\tconst potPitchAngle = round((potPitchDistance * 180) / Math.PI);\n\t\t\tif (potPitchAngle >= options.maxPitch) {\n\t\t\t\ttilting = false;\n\t\t\t}\n\t\t}\n\t}\n\n\t//SWITCH TO CRUISE\n\tif (\n\t\tpitch.angle > options.maxPitch * 0.5 &&\n\t\tpitch.velocity == 0 &&\n\t\tpitch.acceleration == 0\n\t) {\n\t\tmode = \"cruise\";\n\t\t/* if (vertical.velocity <= 0) {\t\t\n\t\t} else {\n\t\t} */\n\t} else if (pitch.velocity < 0 && pitch.acceleration == 0) {\n\t\tconst correction_thrust = round((-pitch.velocity / 2) * 100);\n\n\t\tthrust.front = adjust_for_horizontal(\n\t\t\t9.81 / 2 - correction_thrust / 2,\n\t\t\tpitch.angle\n\t\t);\n\t\tthrust.back = adjust_for_horizontal(\n\t\t\t9.81 / 2 + correction_thrust / 2,\n\t\t\tpitch.angle\n\t\t);\n\t}\n\n\t// Idle\n\telse if (pitch.angle > options.maxPitch * 0.5 && pitch.velocity <= 0) {\n\t\tthrust.front = adjust_for_horizontal(HOVER_THRUST, pitch.angle);\n\t\tthrust.back = adjust_for_horizontal(HOVER_THRUST, pitch.angle);\n\t}\n\n\t// Thrust\n\telse if (tilting) {\n\t\tthrust.front = adjust_for_horizontal(\n\t\t\tHOVER_THRUST - thrust_differential,\n\t\t\tpitch.angle\n\t\t);\n\t\tthrust.back = adjust_for_horizontal(\n\t\t\tHOVER_THRUST + thrust_differential,\n\t\t\tpitch.angle\n\t\t);\n\t}\n\n\t// Reverse Thrust\n\telse {\n\t\tthrust.front = adjust_for_horizontal(\n\t\t\tHOVER_THRUST + thrust_differential,\n\t\t\tpitch.angle\n\t\t);\n\t\tthrust.back = adjust_for_horizontal(\n\t\t\tHOVER_THRUST - thrust_differential,\n\t\t\tpitch.angle\n\t\t);\n\t}\n\n\treturn {\n\t\ttilting,\n\t\tpitch,\n\t\tvertical,\n\t\tmode,\n\t\tthrust,\n\t\tlogger,\n\t};\n};\n","import { FlightOptions } from \"../../App\";\nimport { HOVER_THRUST, thrust_differential } from \"../constants\";\nimport { adjust_for_horizontal, round } from \"./common\";\n\nexport const tilt_to_land = (\n\toptions: FlightOptions,\n\ttilting: boolean,\n\tmode: string,\n\tpitch: {\n\t\tacceleration: number;\n\t\tvelocity: number;\n\t\tdistance: number;\n\t\tangle: number;\n\t},\n\tlogger: string,\n\tthrust: {\n\t\tfront: number;\n\t\tback: number;\n\t},\n\thorizontal: {\n\t\tacceleration: number;\n\t\tvelocity: number;\n\t\tdistance: number;\n\t}\n) => {\n\t//TILT CUTTOFF\n\tif (tilting) {\n\t\tif (pitch.angle >= -options.maxPitch / 2) {\n\t\t\ttilting = false;\n\t\t}\n\t}\n\n\tif (!tilting && pitch.velocity == 0 && pitch.acceleration == 0) {\n\t\tmode = \"landing\";\n\t}\n\t// SPEED CORRECTION\n\telse if (pitch.velocity < 0 && pitch.acceleration == 0) {\n\t\tlogger = logger + \"correct...\";\n\n\t\tconst correction_thrust = round(pitch.velocity * 100);\n\n\t\tthrust.front =\n\t\t\tadjust_for_horizontal(HOVER_THRUST, pitch.angle) +\n\t\t\tcorrection_thrust / 2;\n\t\tthrust.back =\n\t\t\tadjust_for_horizontal(HOVER_THRUST, pitch.angle) -\n\t\t\tcorrection_thrust / 2;\n\t}\n\n\t// IDLE\n\telse if (!tilting && pitch.velocity <= 0) {\n\t\tthrust.front = adjust_for_horizontal(HOVER_THRUST, pitch.angle);\n\t\tthrust.back = adjust_for_horizontal(HOVER_THRUST, pitch.angle);\n\t}\n\n\t// REVERSE\n\telse if (!tilting) {\n\t\tthrust.front = adjust_for_horizontal(\n\t\t\tHOVER_THRUST + thrust_differential,\n\t\t\tpitch.angle\n\t\t);\n\t\tthrust.back = adjust_for_horizontal(\n\t\t\tHOVER_THRUST - thrust_differential,\n\t\t\tpitch.angle\n\t\t);\n\t}\n\n\t// THRUST\n\telse {\n\t\tthrust.front = adjust_for_horizontal(\n\t\t\tHOVER_THRUST - thrust_differential,\n\t\t\tpitch.angle\n\t\t);\n\t\tthrust.back = adjust_for_horizontal(\n\t\t\tHOVER_THRUST + thrust_differential,\n\t\t\tpitch.angle\n\t\t);\n\t}\n\n\t/* \n\t//SWITCH TO LANDING\n\tif (\n\t\tpitch.angle > -options.maxPitch / 2 &&\n\t\tpitch.velocity == 0 &&\n\t\tpitch.acceleration == 0\n\t) {\n\t\tmode = \"landing\";\n\t}\n\n\t// SPEED CORRECTION\n\telse if (pitch.velocity < 0 && pitch.acceleration == 0) {\n\t\tlogger = logger + \"correct...\";\n\n\t\tconst correction_thrust = round(pitch.velocity * 100);\n\n\t\tthrust.front =\n\t\t\tadjust_for_horizontal(hover_thrust, pitch.angle) +\n\t\t\tcorrection_thrust / 2;\n\t\tthrust.back =\n\t\t\tadjust_for_horizontal(hover_thrust, pitch.angle) -\n\t\t\tcorrection_thrust / 2;\n\t}\n\n\t//IDLE\n\telse if (!tilting && pitch.velocity <= 0) {\n\t\tif (options.disableHorizontal) {\n\t\t\tthrust.front = hover_thrust;\n\t\t\tthrust.back = hover_thrust;\n\t\t} else {\n\t\t\tthrust.front = adjust_for_horizontal(hover_thrust, pitch.angle);\n\t\t\tthrust.back = adjust_for_horizontal(hover_thrust, pitch.angle);\n\t\t}\n\n\t\t//Reverse Thrust\n\t} else if (!tilting) {\n\t\tif (options.disableHorizontal) {\n\t\t\tthrust.front = hover_thrust + thrust_differential;\n\t\t\tthrust.back = hover_thrust - thrust_differential;\n\t\t} else {\n\t\t\tthrust.front = adjust_for_horizontal(\n\t\t\t\thover_thrust + thrust_differential,\n\t\t\t\tpitch.angle\n\t\t\t);\n\t\t\tthrust.back = adjust_for_horizontal(\n\t\t\t\thover_thrust - thrust_differential,\n\t\t\t\tpitch.angle\n\t\t\t);\n\t\t}\n\t} else if (horizontal.velocity <= 0) {\n\t\t// Thrust\n\t\tif (options.disableHorizontal) {\n\t\t\tthrust.front = hover_thrust - thrust_differential;\n\t\t\tthrust.back = hover_thrust + thrust_differential;\n\t\t} else {\n\t\t\tthrust.front = adjust_for_horizontal(\n\t\t\t\thover_thrust - thrust_differential,\n\t\t\t\tpitch.angle\n\t\t\t);\n\t\t\tthrust.back = adjust_for_horizontal(\n\t\t\t\thover_thrust + thrust_differential,\n\t\t\t\tpitch.angle\n\t\t\t);\n\t\t}\n\t} */\n\n\treturn {\n\t\ttilting,\n\t\tmode,\n\t\tpitch,\n\t\tthrust,\n\t\tlogger,\n\t\thorizontal,\n\t};\n};\n","import React, { useState } from \"react\";\nimport { Text, TextInput, TouchableOpacity, View } from \"react-native\";\nimport styled from \"styled-components/native\";\nimport { FlightOptions } from \"../../App\";\nimport { margin } from \"../constants\";\n\ninterface Props {\n\tsetOptions: React.Dispatch<React.SetStateAction<FlightOptions>>;\n}\n\nconst FlightOptionInputs: React.FC<Props> = ({ setOptions }) => {\n\tconst [targetAltitude, setTargetAltitude] = useState(40);\n\tconst [targetDistance, setTargetDistance] = useState(40);\n\tconst [maxPitch, setMaxPitch] = useState(45);\n\tconst [aircraftType, setAircraftType] = useState(\"quad\");\n\tconst [disableHorizontal, setDisableHorizontal] = useState<boolean>(false);\n\n\tconst save_input = () => {\n\t\tsetOptions({\n\t\t\ttargetAltitude: targetAltitude,\n\t\t\ttargetDistance: targetDistance,\n\t\t\taircraftType: aircraftType,\n\t\t\tdisableHorizontal: disableHorizontal,\n\t\t\tmaxPitch: maxPitch,\n\t\t});\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<View style={{ height: margin / 2 }} />\n\t\t\t<Text>{\"Altitude (m):\"}</Text>\n\t\t\t<Input\n\t\t\t\tvalue={targetAltitude.toString()}\n\t\t\t\tonChangeText={(e: string) => {\n\t\t\t\t\tconst number = Number(e);\n\t\t\t\t\tif (!isNaN(number)) {\n\t\t\t\t\t\tsetTargetAltitude(number);\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t{/* \t<View style={{ height: margin / 2 }} /> */}\n\t\t\t{/* \t\t<Text>{\"Distance (m):\"}</Text>\n\t\t\t<Input\n\t\t\t\tvalue={targetDistance.toString()}\n\t\t\t\tonChangeText={(e: string) => {\n\t\t\t\t\tconst number = Number(e);\n\t\t\t\t\tif (!isNaN(number)) {\n\t\t\t\t\t\tsetTargetDistance(number);\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t/> */}\n\t\t\t{/* \t<View style={{ height: margin / 2 }} />\n\t\t\t<Text>{\"Tilt Angle:\"}</Text>\n\t\t\t<Input\n\t\t\t\tvalue={maxPitch.toString()}\n\t\t\t\tonChangeText={(e: string) => {\n\t\t\t\t\tconst number = Number(e);\n\t\t\t\t\tif (!isNaN(number)) {\n\t\t\t\t\t\tsetMaxPitch(number);\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<View style={{ height: margin / 2 }} /> */}\n\t\t\t{/* <View style={{ flexDirection: \"row\" }}>\n\t\t\t\t<TouchableOpacity onPress={() => setAircraftType(\"quad\")}>\n\t\t\t\t\t<Toggle\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tbackgroundColor:\n\t\t\t\t\t\t\t\taircraftType == \"quad\" ? \"white\" : \"lightgrey\",\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Text>Quad</Text>\n\t\t\t\t\t</Toggle>\n\t\t\t\t</TouchableOpacity>\n\t\t\t\t<TouchableOpacity\n\t\t\t\t\tonPress={() => setAircraftType(\"tail_sitter\")}\n\t\t\t\t>\n\t\t\t\t\t<Toggle\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tbackgroundColor:\n\t\t\t\t\t\t\t\taircraftType == \"tail_sitter\"\n\t\t\t\t\t\t\t\t\t? \"white\"\n\t\t\t\t\t\t\t\t\t: \"lightgrey\",\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Text>Tail Sitter</Text>\n\t\t\t\t\t</Toggle>\n\t\t\t\t</TouchableOpacity>\n\t\t\t</View> */}\n\n\t\t\t{/* \t<View style={{ height: margin / 2 }} />\n\t\t\t<View style={{ flexDirection: \"row\" }}>\n\t\t\t\t<TouchableOpacity\n\t\t\t\t\tonPress={() => {\n\t\t\t\t\t\tsetDisableHorizontal((curr: boolean) => !curr);\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<Toggle\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tbackgroundColor: disableHorizontal\n\t\t\t\t\t\t\t\t? \"white\"\n\t\t\t\t\t\t\t\t: \"lightgrey\",\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Text>Disable Horizontal Modement</Text>\n\t\t\t\t\t</Toggle>\n\t\t\t\t</TouchableOpacity>\n\t\t\t\t<View style={{ height: margin / 2 }} />\n\t\t\t</View> */}\n\t\t\t<View style={{ height: margin / 2 }} />\n\t\t\t<TouchableOpacity\n\t\t\t\tstyle={{\n\t\t\t\t\tbackgroundColor: \"#55ad5e\",\n\t\t\t\t\theight: 100,\n\t\t\t\t\tjustifyContent: \"center\",\n\t\t\t\t\talignItems: \"center\",\n\t\t\t\t}}\n\t\t\t\tonPress={() => {\n\t\t\t\t\tsave_input();\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Text style={{ fontSize: 30, color: \"white\" }}>Go</Text>\n\t\t\t</TouchableOpacity>\n\t\t</>\n\t);\n};\n\nconst Input = styled(TextInput)`\n\tborder-color: black;\n\tborder-width: 1px;\n\tpadding: ${margin / 2}px;\n`;\n\nconst Toggle = styled.View`\n\tpadding: ${margin / 2}px;\n\tborder-width: 1px;\n\tborder-color: black;\n`;\n\nexport default FlightOptionInputs;\n","import React, { useEffect } from \"react\";\nimport { Text, View } from \"react-native\";\nimport { FlightData, FlightOptions } from \"../../App\";\nimport { calculateFlight } from \"../calculations/main\";\nimport { margin } from \"../constants\";\nimport FlightOptionInputs from \"./FlightOptionInputs\";\n\ninterface Props {\n\toptions: FlightOptions;\n\tsetOptions: React.Dispatch<React.SetStateAction<FlightOptions>>;\n\tsetData: React.Dispatch<React.SetStateAction<FlightData[]>>;\n\tsetNavigation: React.Dispatch<React.SetStateAction<string>>;\n\tnavigation: string;\n}\n\nconst Planner: React.FC<Props> = ({\n\toptions,\n\tsetOptions,\n\tsetData,\n\tsetNavigation,\n\tnavigation,\n}) => {\n\tuseEffect(() => {\n\t\tif (navigation == \"input\" && options.aircraftType !== \"\")\n\t\t\tsetOptions({\n\t\t\t\taircraftType: \"\",\n\t\t\t\ttargetAltitude: 0,\n\t\t\t\ttargetDistance: 0,\n\t\t\t\tdisableHorizontal: true,\n\t\t\t\tmaxPitch: 0,\n\t\t\t});\n\t}, [options, navigation]);\n\n\tuseEffect(() => {\n\t\tif (options.aircraftType !== \"\") {\n\t\t\tconst flightData = calculateFlight(options);\n\t\t\tsetData(flightData);\n\t\t\tsetNavigation(\"flight\");\n\t\t}\n\t}, [options]);\n\n\treturn (\n\t\t<View style={{ margin: margin }}>\n\t\t\t<Text style={{ fontSize: 30, fontWeight: \"600\" }}>\n\t\t\t\tFlight Planner\n\t\t\t</Text>\n\t\t\t<View style={{ height: margin / 2 }} />\n\t\t\t<Text>Click = Start / Stop</Text>\n\t\t\t<Text>Drag = Go through Time</Text>\n\t\t\t<View style={{ height: margin / 2 }} />\n\t\t\t<Text>Try this out on a laptop.</Text>\n\t\t\t<View style={{ height: margin / 2 }} />\n\t\t\t<FlightOptionInputs {...{ setOptions }} />\n\t\t</View>\n\t);\n};\n\nexport default Planner;\n","import { FlightData, FlightOptions } from \"../../App\";\nimport { DimensionData, PitchProps } from \"../Flight/FlightWrapper\";\nimport { adjust_for_horizontal, round } from \"./common\";\nimport { runLanding } from \"./landing\";\nimport { reverse_cruise } from \"./reverse_cruise\";\nimport { spin } from \"./spin\";\nimport { runTakeoff } from \"./takeoff\";\nimport { runTiltToCruise } from \"./tilt_to_cruise\";\nimport { tilt_to_land } from \"./tilt_to_land\";\n\nexport const calculateFlight = (options: FlightOptions) => {\n\tconst flightData: FlightData[] = [];\n\n\tlet engines_running = false;\n\tlet tilting = true;\n\n\tlet mode = \"takeoff\";\n\n\tlet thrust = {\n\t\tfront: 0,\n\t\tback: 0,\n\t};\n\n\tlet vertical: DimensionData = {\n\t\tacceleration: 0,\n\t\tvelocity: 0,\n\t\tdistance: 0,\n\t};\n\n\tlet horizontal: DimensionData = {\n\t\tacceleration: 0,\n\t\tvelocity: 0,\n\t\tdistance: 0,\n\t};\n\n\tlet pitch: PitchProps = {\n\t\tacceleration: 0,\n\t\tvelocity: 0,\n\t\tdistance: 0,\n\t\tangle: 0,\n\t};\n\n\tlet defaultAltitude = 0;\n\tlet defaultDistance = 0;\n\n\tlet logger = \"\";\n\n\tfor (let i = 0; i <= 2000; i++) {\n\t\tlogger = \"\";\n\t\t//TAKEOFF\n\t\tif (mode == \"takeoff\") {\n\t\t\tconst results = runTakeoff(\n\t\t\t\toptions,\n\t\t\t\tvertical,\n\t\t\t\tthrust,\n\t\t\t\tlogger,\n\t\t\t\tmode,\n\t\t\t\tdefaultAltitude\n\t\t\t);\n\t\t\tvertical = results.vertical;\n\t\t\tthrust = results.thrust;\n\t\t\tlogger = results.logger;\n\t\t\tmode = results.mode;\n\t\t\tdefaultAltitude = results.defaultAltitude;\n\t\t}\n\t\tif (mode == \"tilt_to_cruise\") {\n\t\t\tconst results = runTiltToCruise(\n\t\t\t\toptions,\n\t\t\t\ttilting,\n\t\t\t\tpitch,\n\t\t\t\tvertical,\n\t\t\t\tmode,\n\t\t\t\tthrust,\n\t\t\t\tlogger\n\t\t\t);\n\t\t\ttilting = results.tilting;\n\t\t\tvertical = results.vertical;\n\t\t\tpitch = results.pitch;\n\t\t\tmode = results.mode;\n\t\t\tthrust = results.thrust;\n\t\t\tlogger = results.logger;\n\t\t}\n\t\tif (mode == \"cruise\") {\n\t\t\tconst correction_thrust = round(\n\t\t\t\t(-vertical.velocity / 2) * 100 + 9.81 / 2\n\t\t\t);\n\n\t\t\tthrust.front = adjust_for_horizontal(\n\t\t\t\tcorrection_thrust,\n\t\t\t\tpitch.angle\n\t\t\t);\n\t\t\tthrust.back = adjust_for_horizontal(correction_thrust, pitch.angle);\n\t\t\tif (horizontal.distance >= 20) {\n\t\t\t\tmode = \"spin\";\n\t\t\t}\n\t\t\t// Reverse Thrust\n\t\t}\n\t\tif (mode == \"spin\") {\n\t\t\tconst results = spin(tilting, mode, pitch, thrust, logger);\n\t\t\tlogger = results.logger;\n\t\t\ttilting = results.tilting;\n\t\t\tpitch = results.pitch;\n\t\t\tmode = results.mode;\n\t\t\tthrust = results.thrust;\n\t\t}\n\t\tif (mode == \"reverse_cruise\") {\n\t\t\tconst results = reverse_cruise(\n\t\t\t\tthrust,\n\t\t\t\tvertical,\n\t\t\t\thorizontal,\n\t\t\t\tpitch,\n\t\t\t\tmode,\n\t\t\t\tlogger\n\t\t\t);\n\t\t\tthrust = results.thrust;\n\t\t\tvertical = results.vertical;\n\t\t\thorizontal = results.horizontal;\n\t\t\tpitch = results.pitch;\n\t\t\tmode = results.mode;\n\t\t\tlogger = results.logger;\n\t\t}\n\t\tif (mode == \"tilt_to_land\") {\n\t\t\tconst results = tilt_to_land(\n\t\t\t\toptions,\n\t\t\t\ttilting,\n\t\t\t\tmode,\n\t\t\t\tpitch,\n\t\t\t\tlogger,\n\t\t\t\tthrust,\n\t\t\t\thorizontal\n\t\t\t);\n\t\t\ttilting = results.tilting;\n\t\t\tmode = results.mode;\n\t\t\tpitch = results.pitch;\n\t\t\tthrust = results.thrust;\n\t\t\tlogger = results.logger;\n\t\t\thorizontal = results.horizontal;\n\t\t}\n\n\t\tif (mode == \"landing\") {\n\t\t\tconst results = runLanding(\n\t\t\t\tengines_running,\n\t\t\t\tvertical,\n\t\t\t\tthrust,\n\t\t\t\tpitch,\n\t\t\t\tlogger\n\t\t\t);\n\t\t\tengines_running = results.engines_running;\n\t\t\tvertical = results.vertical;\n\t\t\tthrust = results.thrust;\n\t\t\tpitch = results.pitch;\n\t\t\tlogger = results.logger;\n\t\t}\n\n\t\t// Pitch Angle\n\t\tpitch.acceleration = round(thrust.back - thrust.front);\n\t\tpitch.velocity = round(\n\t\t\tpitch.velocity + round(pitch.acceleration / 100)\n\t\t);\n\t\tpitch.distance = round(pitch.distance + round(pitch.velocity / 100));\n\t\tpitch.angle = round((pitch.distance * 180) / Math.PI);\n\n\t\t// Thrust Components\n\t\tconst front_vertical = round(\n\t\t\tMath.cos((pitch.angle * Math.PI) / 180) * thrust.front\n\t\t);\n\t\tconst front_horizontal = round(\n\t\t\tMath.sin((pitch.angle * Math.PI) / 180) * thrust.front\n\t\t);\n\t\tconst back_vertical = round(\n\t\t\tMath.cos((pitch.angle * Math.PI) / 180) * thrust.back\n\t\t);\n\t\tconst back_horizontal = round(\n\t\t\tMath.sin((pitch.angle * Math.PI) / 180) * thrust.back\n\t\t);\n\n\t\t// Vertical Movement\n\t\tif (options.disableHorizontal) {\n\t\t\tvertical.acceleration = round(thrust.front + thrust.back - 9.81);\n\t\t} else\n\t\t\tvertical.acceleration = round(\n\t\t\t\tfront_vertical + back_vertical - 9.81\n\t\t\t);\n\t\tvertical.velocity = round(\n\t\t\tvertical.velocity + round(vertical.acceleration / 100)\n\t\t);\n\t\tvertical.distance = round(\n\t\t\tvertical.distance + round(vertical.velocity / 100)\n\t\t);\n\n\t\t// Horizontal Movement\n\t\tif (!options.disableHorizontal) {\n\t\t\thorizontal.acceleration = round(front_horizontal + back_horizontal);\n\t\t\tconsole.log(horizontal.acceleration);\n\t\t\thorizontal.velocity = round(\n\t\t\t\thorizontal.velocity + round(horizontal.acceleration / 100)\n\t\t\t);\n\t\t\thorizontal.distance = round(\n\t\t\t\thorizontal.distance + round(horizontal.velocity / 100)\n\t\t\t);\n\t\t}\n\n\t\tconst flightMoment: FlightData = {\n\t\t\tmode: mode,\n\t\t\tfrontThrustComponents: {\n\t\t\t\ttotal: thrust.front,\n\t\t\t\tvertical: front_vertical,\n\t\t\t\thorizontal: front_horizontal,\n\t\t\t},\n\t\t\tbackThrustComponents: {\n\t\t\t\ttotal: thrust.back,\n\t\t\t\tvertical: back_vertical,\n\t\t\t\thorizontal: back_horizontal,\n\t\t\t},\n\t\t\tvertical: {\n\t\t\t\tacceleration: vertical.acceleration,\n\t\t\t\tvelocity: vertical.velocity,\n\t\t\t\tdistance: vertical.distance,\n\t\t\t},\n\t\t\thorizontal: {\n\t\t\t\tacceleration: horizontal.acceleration,\n\t\t\t\tvelocity: horizontal.velocity,\n\t\t\t\tdistance: horizontal.distance,\n\t\t\t},\n\t\t\tpitch: {\n\t\t\t\tacceleration: pitch.acceleration,\n\t\t\t\tvelocity: pitch.velocity,\n\t\t\t\tdistance: pitch.distance,\n\t\t\t\tangle: pitch.angle,\n\t\t\t},\n\t\t\tprediction: {\n\t\t\t\taltitude: defaultAltitude,\n\t\t\t\tdistance: defaultDistance,\n\t\t\t},\n\t\t\tlogger: logger,\n\t\t};\n\n\t\tflightData.push(flightMoment);\n\t}\n\n\treturn flightData;\n};\n","import { StatusBar } from \"expo-status-bar\";\nimport React, { useState } from \"react\";\nimport { SafeAreaView, useWindowDimensions } from \"react-native\";\nimport styled from \"styled-components/native\";\nimport Flight, { DimensionData, PitchProps } from \"./src/Flight/FlightWrapper\";\nimport Planner from \"./src/Preflight/Planner\";\n\nexport interface FlightData {\n\tmode: string;\n\tfrontThrustComponents: ThrustComponents;\n\tbackThrustComponents: ThrustComponents;\n\tvertical: DimensionData;\n\thorizontal: DimensionData;\n\tpitch: PitchProps;\n\tprediction: {\n\t\taltitude: number;\n\t\tdistance: number;\n\t};\n\tlogger: string;\n}\n\nexport interface ThrustComponents {\n\ttotal: number;\n\tvertical: number;\n\thorizontal: number;\n}\n\nexport interface FlightOptions {\n\ttargetAltitude: number;\n\ttargetDistance: number;\n\taircraftType: string;\n\tdisableHorizontal: boolean;\n\tmaxPitch: number;\n}\n\nconst App: React.FC<{}> = ({}) => {\n\tconst { width } = useWindowDimensions();\n\tconst [data, setData] = useState<FlightData[]>([]);\n\tconst [options, setOptions] = useState<FlightOptions>({\n\t\ttargetAltitude: 0,\n\t\ttargetDistance: 0,\n\t\taircraftType: \"\",\n\t\tdisableHorizontal: false,\n\t\tmaxPitch: 0,\n\t});\n\tconst [navigation, setNavigation] = useState<string>(\"input\");\n\n\tconst Background = styled.View`\n\t\tflex: 1;\n\t\twidth: ${width}px;\n\t\toverflow: hidden;\n\t\tbackground-color: #e2e2e5;\n\t`;\n\n\treturn (\n\t\t<SafeAreaView style={{ flex: 1 }}>\n\t\t\t<Background>\n\t\t\t\t<StatusBar style=\"dark\" />\n\t\t\t\t{navigation == \"input\" || navigation == \"planner\" ? (\n\t\t\t\t\t<Planner\n\t\t\t\t\t\t{...{ options }}\n\t\t\t\t\t\t{...{ setOptions }}\n\t\t\t\t\t\t{...{ setData }}\n\t\t\t\t\t\t{...{ navigation }}\n\t\t\t\t\t\t{...{ setNavigation }}\n\t\t\t\t\t/>\n\t\t\t\t) : (\n\t\t\t\t\t<Flight\n\t\t\t\t\t\t{...{ setNavigation }}\n\t\t\t\t\t\t{...{ options }}\n\t\t\t\t\t\t{...{ data }}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</Background>\n\t\t</SafeAreaView>\n\t);\n};\n\nexport default App;\n"],"sourceRoot":""}