{"version":3,"sources":["webpack:///./constants.ts?377f","src/Aircraft.tsx","src/calculations/common.ts","src/DataPanel.tsx","src/Grid.tsx","src/Flight.tsx","src/hooks/useClock.ts","src/calculations/takeoff.ts","src/calculations/tilt_to_cruise.ts","src/FlightOptionInputs.tsx","src/Planner.tsx","src/calculations/main.ts","App.tsx"],"names":["Math","pow","stator_width","aircraft_width","Background","styled","Animated","View","Fulselage","AircraftComp","ForceBox","ForceVector","DirectionVector","Aircraft","vertical","horizontal","pitch","back_thrust_components","front_thrust_components","useWindowDimensions","width","height","animatedBackground","useAnimatedStyle","top","value","distance","left","transform","rotate","degree","animatedVectorBox","animatedFrontVectorBox","getVectorComponentStyle","side","direction","thrust_component","get_aircraft_style","get_force_vector_style","total","style","round","num","digits","DataPanel","clock","tClock","useDerivedValue","toString","vAccel","acceleration","vVelo","velocity","vDist","hAccel","hVelo","hDist","pAccel","pVelo","pDeg","flexDirection","alignItems","margin","justifyContent","AnimatedText","fontSize","text","Text","Grid","AbsoluteBackground","Array","keys","map","index","e","backgroundColor","opacity","position","BackButton","TouchableOpacity","Overview","Box","Flight","setNavigation","data","options","mode","useSharedValue","rad","clock_running","runClock","withTiming","duration","NR_OF_SEC","easing","Easing","linear","finished","useAnimatedReaction","formatedClock","Number","toFixed","resultClock","isNew","useClock","rounded_clock","frontThrustComponents","backThrustComponents","console","log","getBoxStyle","mode_val","clockBarStyle","start_clock","active","panGesture","Gesture","Pan","onBegin","cancelAnimation","onChange","drag_clock","translationX","clamped_drag_clock","max","min","onFinalize","onEnd","withDecay","velocityX","clamp","animatedBackgroundStyle","toggle_clock_running","gesture","TouchableWithoutFeedback","onPress","runOnJS","flex","runTakeoff","engines_running","vAcceleration","vVelocity","vDistance","back_thrust","front_thrust","logger","potVelocity","potAltitude","j","potAcceleration","targetAltitude","correction_thrust","MAX_THRUST","adjust_for_horizontal","thrust_total","pitch_angle","cos","PI","runTiltToCruise","tilting","pitchVelocity","pitchAcceleration","maxPitch","disableHorizontal","Input","TextInput","Toggle","FlightOptionInputs","setOptions","useState","setTargetAltitude","targetDistance","setTargetDistance","setMaxPitch","aircraftType","setAircraftType","setDisableHorizontal","onChangeText","number","isNaN","curr","Button","title","Planner","setData","navigation","useEffect","flightData","hAcceleration","hVelocity","hDistance","pitchDistance","i","results","front_vertical","front_horizontal","sin","back_vertical","back_horizontal","flightMoment","push","calculateFlight","App","SafeAreaView","StatusBar"],"mappings":"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","file":"static/js/app.6ffd9bb5.chunk.js","sourcesContent":["export const colors = {\n\tgrey: \"#D9D9D9\",\n};\n\n// export const maxForce = 20; // kg m+2 s-2\n\nexport const gravitational_constant = 6.6743 * Math.pow(10, -11); // m3 kg-1 s-2\nexport const earth_mass = 5.972 * Math.pow(10, 24); // kg\nexport const earth_radius = 6371000; // m\nexport const aircraft_mass = 1; // kg\n\nexport const LAT_DISTANCE = 50;\nexport const LON_DISTANCE = 50;\n\nexport const MAX_THRUST = 20;\nexport const MAX_THRUST_PER_SIDE = MAX_THRUST / 2;\n\nexport const margin = 30;\n\n/* \ndef calculate_gravity(mass, altitude):\n    gravitational_constant = -astro.G\n    earth_mass = astro.M_earth.value * astro.M_earth.unit\n    earth_radius = u.earthRad.to(u.m) * u.m\n\n    gravity = ((gravitational_constant * earth_mass * mass) /\n               (earth_radius + altitude)**2)\n\n    return gravity\n*/\n","import React from \"react\";\nimport { useWindowDimensions } from \"react-native\";\nimport Animated, { useAnimatedStyle } from \"react-native-reanimated\";\nimport styled from \"styled-components/native\";\nimport { ThrustComponents } from \"../App\";\nimport { LAT_DISTANCE, LON_DISTANCE } from \"../constants\";\n\ninterface Props {\n\t// flight_data: Animated.SharedValue<FlightData>;\n\tvertical: Animated.SharedValue<{\n\t\tacceleration: number;\n\t\tvelocity: number;\n\t\tdistance: number;\n\t}>;\n\thorizontal: Animated.SharedValue<{\n\t\tacceleration: number;\n\t\tvelocity: number;\n\t\tdistance: number;\n\t}>;\n\tpitch: Animated.SharedValue<{\n\t\tacceleration: number;\n\t\tvelocity: number;\n\t\tdistance: number;\n\t\tdegree: number;\n\t\trad: number;\n\t}>;\n\tback_thrust_components: Animated.SharedValue<ThrustComponents>;\n\tfront_thrust_components: Animated.SharedValue<ThrustComponents>;\n}\n\nconst Aircraft: React.FC<Props> = ({\n\tvertical,\n\thorizontal,\n\tpitch,\n\tback_thrust_components,\n\tfront_thrust_components,\n}) => {\n\tconst { width, height } = useWindowDimensions();\n\tconst thrustScaler = 4;\n\n\tconst animatedBackground = useAnimatedStyle(() => {\n\t\treturn {\n\t\t\ttop:\n\t\t\t\theight / 2 -\n\t\t\t\taircraft_width / 2 -\n\t\t\t\t(vertical.value.distance / 10) * LON_DISTANCE,\n\t\t\tleft:\n\t\t\t\twidth / 2 -\n\t\t\t\taircraft_width / 2 +\n\t\t\t\t(horizontal.value.distance / 10) * LAT_DISTANCE,\n\t\t\ttransform: [{ rotate: pitch.value.degree + \"deg\" }],\n\t\t};\n\t});\n\n\tconst animatedVectorBox = useAnimatedStyle(() => {\n\t\treturn {\n\t\t\ttransform: [{ rotate: -pitch.value.degree + \"deg\" }],\n\t\t\theight: back_thrust_components.value.vertical * 2 * thrustScaler,\n\t\t\twidth: back_thrust_components.value.horizontal * 2 * thrustScaler,\n\t\t\tleft: -back_thrust_components.value.horizontal * thrustScaler, //-back_thrust.value * thrustScaler,\n\t\t\ttop:\n\t\t\t\taircraft_width / 2 -\n\t\t\t\tback_thrust_components.value.vertical * thrustScaler, //aircraft_width / 2 - back_thrust.value * thrustScaler,\n\t\t};\n\t});\n\n\tconst animatedFrontVectorBox = useAnimatedStyle(() => {\n\t\treturn {\n\t\t\ttransform: [{ rotate: -pitch.value.degree + \"deg\" }],\n\t\t\theight: front_thrust_components.value.vertical * 2 * thrustScaler,\n\t\t\twidth: front_thrust_components.value.horizontal * 2 * thrustScaler,\n\t\t\tleft:\n\t\t\t\taircraft_width -\n\t\t\t\tfront_thrust_components.value.horizontal * thrustScaler, //-back_thrust.value * thrustScaler,\n\t\t\ttop:\n\t\t\t\taircraft_width / 2 -\n\t\t\t\tfront_thrust_components.value.vertical * thrustScaler,\n\t\t};\n\t});\n\n\tconst getVectorComponentStyle = (side: string, direction: string) => {\n\t\t\"worklet\";\n\t\tlet thrust_component =\n\t\t\tside == \"front\" ? front_thrust_components : back_thrust_components;\n\t\tconst animatedVectorStyle = useAnimatedStyle(() => {\n\t\t\t/* const vertical_thrust =\n\t\t\t\tMath.cos((pitch_angle.value * Math.PI) / 180) * back_thrust.value; */\n\t\t\treturn {\n\t\t\t\theight:\n\t\t\t\t\tdirection == \"vertical\"\n\t\t\t\t\t\t? thrust_component.value.vertical * thrustScaler\n\t\t\t\t\t\t: 1,\n\t\t\t\twidth:\n\t\t\t\t\tdirection == \"vertical\"\n\t\t\t\t\t\t? 1\n\t\t\t\t\t\t: thrust_component.value.horizontal * thrustScaler,\n\t\t\t\ttop: thrust_component.value.vertical * thrustScaler,\n\t\t\t\tleft:\n\t\t\t\t\tdirection == \"vertical\"\n\t\t\t\t\t\t? thrust_component.value.horizontal * thrustScaler\n\t\t\t\t\t\t: 0,\n\t\t\t};\n\t\t});\n\t\treturn animatedVectorStyle;\n\t};\n\n\tconst get_aircraft_style = (direction: string) => {\n\t\t\"worklet\";\n\t\tconst aircraftStyle = useAnimatedStyle(() => {\n\t\t\treturn {\n\t\t\t\ttop: aircraft_width / 2 - stator_width / 2,\n\t\t\t\tleft:\n\t\t\t\t\tdirection == \"back\"\n\t\t\t\t\t\t? -stator_width / 2\n\t\t\t\t\t\t: aircraft_width - stator_width / 2,\n\t\t\t};\n\t\t});\n\t\treturn aircraftStyle;\n\t};\n\n\tconst get_force_vector_style = (direction: string) => {\n\t\t\"worklet\";\n\t\tconst forceVectorStyle = useAnimatedStyle(() => {\n\t\t\treturn {\n\t\t\t\ttop: aircraft_width / 2,\n\t\t\t\tleft: direction == \"back\" ? 0 : aircraft_width,\n\t\t\t\theight:\n\t\t\t\t\tdirection == \"front\"\n\t\t\t\t\t\t? front_thrust_components.value.total * thrustScaler\n\t\t\t\t\t\t: back_thrust_components.value.total * thrustScaler,\n\t\t\t};\n\t\t});\n\t\treturn forceVectorStyle;\n\t};\n\n\treturn (\n\t\t<Background style={animatedBackground}>\n\t\t\t<Fulselage />\n\t\t\t<AircraftComp style={get_aircraft_style(\"back\")} />\n\t\t\t<AircraftComp style={get_aircraft_style(\"front\")} />\n\t\t\t<ForceBox style={animatedVectorBox}>\n\t\t\t\t<DirectionVector\n\t\t\t\t\tstyle={getVectorComponentStyle(\"back\", \"vertical\")}\n\t\t\t\t/>\n\t\t\t\t<DirectionVector\n\t\t\t\t\tstyle={getVectorComponentStyle(\"back\", \"horizontal\")}\n\t\t\t\t/>\n\t\t\t</ForceBox>\n\t\t\t<ForceBox style={animatedFrontVectorBox}>\n\t\t\t\t<DirectionVector\n\t\t\t\t\tstyle={getVectorComponentStyle(\"front\", \"vertical\")}\n\t\t\t\t/>\n\t\t\t\t<DirectionVector\n\t\t\t\t\tstyle={getVectorComponentStyle(\"front\", \"horizontal\")}\n\t\t\t\t/>\n\t\t\t</ForceBox>\n\t\t\t<ForceVector style={get_force_vector_style(\"back\")} />\n\t\t\t<ForceVector style={get_force_vector_style(\"front\")} />\n\t\t</Background>\n\t);\n};\n\nconst stator_width = 11;\nconst aircraft_width = 40;\n\nconst Background = styled(Animated.View)`\n\twidth: ${aircraft_width}px;\n\theight: ${aircraft_width}px;\n\tborder-radius: ${aircraft_width / 2}px;\n\tborder-width: 1px;\n\tborder-color: #ff000038;\n\tposition: absolute;\n\tflex-direction: row;\n`;\n\nconst Fulselage = styled.View`\n\tposition: absolute;\n\ttop: ${aircraft_width / 2 - 2}px;\n\twidth: ${aircraft_width}px;\n\theight: 4px;\n\tbackground-color: black;\n`;\n\nconst AircraftComp = styled(Animated.View)`\n\tposition: absolute;\n\twidth: ${stator_width}px;\n\theight: ${stator_width}px;\n\tborder-radius: ${stator_width / 2}px;\n\tborder-width: 1px;\n\tborder-color: black;\n\tbackground-color: white;\n`;\n\nconst ForceBox = styled(Animated.View)`\n\tposition: absolute;\n\t//\tbackground-color: #ff000021;\n`;\n\nconst ForceVector = styled(Animated.View)`\n\tposition: absolute;\n\twidth: 1px;\n\tbackground-color: black;\n`;\n\nconst DirectionVector = styled(Animated.View)`\n\tbackground-color: black;\n\topacity: 0.3;\n\tposition: absolute;\n`;\n\nexport default Aircraft;\n","export const round = (num: number, digits: number = 4) => {\n\t\"worklet\";\n\tif (digits == 4) {\n\t\treturn Math.round(num * 10000) / 10000;\n\t} else return Math.round(num * 100) / 100;\n};\n","import React from \"react\";\nimport { Text, View } from \"react-native\";\nimport Animated, { useDerivedValue } from \"react-native-reanimated\";\nimport { AnimatedText } from \"react-native-wagmi-charts\";\nimport { margin } from \"../constants\";\nimport { round } from \"./calculations/common\";\n\ninterface Props {\n\tclock: Animated.SharedValue<number>;\n\tvertical: Animated.SharedValue<{\n\t\tacceleration: number;\n\t\tvelocity: number;\n\t\tdistance: number;\n\t}>;\n\thorizontal: Animated.SharedValue<{\n\t\tacceleration: number;\n\t\tvelocity: number;\n\t\tdistance: number;\n\t}>;\n\tpitch: Animated.SharedValue<{\n\t\tacceleration: number;\n\t\tvelocity: number;\n\t\tdistance: number;\n\t\tdegree: number;\n\t\trad: number;\n\t}>;\n}\n\nconst DataPanel: React.FC<Props> = ({ clock, vertical, horizontal, pitch }) => {\n\tconst tClock = useDerivedValue(() => round(clock.value, 2).toString());\n\tconst vAccel = useDerivedValue(() =>\n\t\tvertical.value.acceleration.toString()\n\t);\n\tconst vVelo = useDerivedValue(() => vertical.value.velocity.toString());\n\tconst vDist = useDerivedValue(() => vertical.value.distance.toString());\n\n\tconst hAccel = useDerivedValue(() =>\n\t\thorizontal.value.acceleration.toString()\n\t);\n\tconst hVelo = useDerivedValue(() => horizontal.value.velocity.toString());\n\tconst hDist = useDerivedValue(() => horizontal.value.distance.toString());\n\n\tconst pAccel = useDerivedValue(() => pitch.value.acceleration.toString());\n\tconst pVelo = useDerivedValue(() => pitch.value.velocity.toString());\n\tconst pDeg = useDerivedValue(() => pitch.value.degree.toString());\n\treturn (\n\t\t<View\n\t\t\tstyle={{\n\t\t\t\tflexDirection: \"row\",\n\t\t\t\talignItems: \"stretch\",\n\t\t\t\tmargin: margin,\n\t\t\t}}\n\t\t>\n\t\t\t<View\n\t\t\t\tstyle={{\n\t\t\t\t\talignItems: \"center\",\n\t\t\t\t\tjustifyContent: \"center\",\n\t\t\t\t\tflexDirection: \"row\",\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<AnimatedText\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\t//textAlign: \"right\",\n\t\t\t\t\t\tfontSize: 24,\n\t\t\t\t\t\twidth: 65,\n\t\t\t\t\t}}\n\t\t\t\t\ttext={tClock}\n\t\t\t\t/>\n\t\t\t\t<Text style={{ fontSize: 24 }}>s</Text>\n\t\t\t\t<View style={{ width: margin * 2 }} />\n\t\t\t</View>\n\t\t\t<View>\n\t\t\t\t<Text style={{ fontSize: 24 }}>{\"Vertical\"}</Text>\n\t\t\t\t<Text>{\"Acceleration\"}</Text>\n\t\t\t\t<Text>{\"Velocity\"}</Text>\n\t\t\t\t<Text>{\"Distance\"}</Text>\n\t\t\t</View>\n\t\t\t<View style={{ width: margin / 2 }} />\n\t\t\t<View style={{}}>\n\t\t\t\t<Text style={{ fontSize: 24 }}>{\"-\"}</Text>\n\t\t\t\t<AnimatedText text={vAccel} />\n\t\t\t\t<AnimatedText text={vVelo} />\n\t\t\t\t<AnimatedText text={vDist} />\n\t\t\t</View>\n\n\t\t\t<View style={{}}>\n\t\t\t\t<Text style={{ fontSize: 24 }}>{\"Horizontal\"}</Text>\n\t\t\t\t<Text>{\"Acceleration\"}</Text>\n\t\t\t\t<Text>{\"Velocity\"}</Text>\n\t\t\t\t<Text>{\"Distance\"}</Text>\n\t\t\t</View>\n\t\t\t<View style={{ width: margin / 2 }} />\n\t\t\t<View style={{}}>\n\t\t\t\t<Text style={{ fontSize: 24 }}>{\"-\"}</Text>\n\t\t\t\t<AnimatedText text={hAccel} />\n\t\t\t\t<AnimatedText text={hVelo} />\n\t\t\t\t<AnimatedText text={hDist} />\n\t\t\t</View>\n\n\t\t\t<View style={{}}>\n\t\t\t\t<Text style={{ fontSize: 24 }}>{\"Pitch\"}</Text>\n\t\t\t\t<Text>{\"Acceleration\"}</Text>\n\t\t\t\t<Text>{\"Velocity\"}</Text>\n\t\t\t\t<Text>{\"Angle\"}</Text>\n\t\t\t</View>\n\t\t\t<View style={{ width: margin / 2 }} />\n\t\t\t<View style={{}}>\n\t\t\t\t<Text style={{ fontSize: 24 }}>{\"-\"}</Text>\n\t\t\t\t<AnimatedText text={pAccel} />\n\t\t\t\t<AnimatedText text={pVelo} />\n\t\t\t\t<AnimatedText text={pDeg} />\n\t\t\t</View>\n\t\t</View>\n\t);\n};\n\nexport default DataPanel;\n","import React from \"react\";\nimport { Text, useWindowDimensions, View, ViewStyle } from \"react-native\";\nimport styled from \"styled-components/native\";\nimport { LAT_DISTANCE, LON_DISTANCE } from \"../constants\";\n\ninterface Props {}\n\nconst Grid: React.FC<Props> = () => {\n\tconst { height, width } = useWindowDimensions();\n\n\tconst AbsoluteBackground = styled.View`\n\t\tposition: absolute;\n\t\theight: ${height}px;\n\t\twidth: ${width}px;\n\t\toverflow: hidden;\n\t`;\n\n\tconst getLatitudeStyle = (e: number) => {\n\t\tconst style: ViewStyle = {\n\t\t\ttop: 0.5 * height - e * LAT_DISTANCE,\n\t\t\tleft: width / 2,\n\t\t\theight: 1,\n\t\t\twidth: width / 2,\n\t\t\tbackgroundColor: \"black\",\n\t\t\topacity: 0.3,\n\t\t\tposition: \"absolute\",\n\t\t};\n\t\treturn style;\n\t};\n\n\tconst getLatitudeTextStyle = (e: number) => {\n\t\tconst style: ViewStyle = {\n\t\t\ttop: 0.5 * height - 8 - e * LAT_DISTANCE,\n\t\t\tleft: 10,\n\t\t\theight: 1,\n\t\t\twidth: width / 2,\n\t\t\tposition: \"absolute\",\n\t\t};\n\t\treturn style;\n\t};\n\n\tconst getLongitudeStyle = (e: number) => {\n\t\tconst style: ViewStyle = {\n\t\t\tleft: 0.5 * width + e * LON_DISTANCE,\n\t\t\theight: height / 2,\n\t\t\twidth: 1,\n\t\t\tbackgroundColor: \"black\",\n\t\t\topacity: 0.3,\n\t\t\tposition: \"absolute\",\n\t\t};\n\t\treturn style;\n\t};\n\n\tconst getLongitudeTextStyle = (e: number) => {\n\t\tconst style: ViewStyle = {\n\t\t\ttop: height / 2 + 8,\n\t\t\tleft: 0.5 * width - 8 + e * LON_DISTANCE,\n\t\t\theight: height / 2,\n\t\t\tposition: \"absolute\",\n\t\t};\n\t\treturn style;\n\t};\n\n\treturn (\n\t\t<AbsoluteBackground>\n\t\t\t{[...Array(10).keys()].map((index) => {\n\t\t\t\treturn <View style={getLatitudeStyle(index)} key={index} />;\n\t\t\t})}\n\n\t\t\t{[...Array(10).keys()].map((index) => {\n\t\t\t\treturn (\n\t\t\t\t\t<Text style={getLatitudeTextStyle(index)} key={index}>\n\t\t\t\t\t\t{index * 10}\n\t\t\t\t\t</Text>\n\t\t\t\t);\n\t\t\t})}\n\n\t\t\t{[...Array(10).keys()].map((index) => {\n\t\t\t\treturn <View style={getLongitudeStyle(index)} key={index} />;\n\t\t\t})}\n\n\t\t\t{[...Array(10).keys()].map((index) => {\n\t\t\t\treturn (\n\t\t\t\t\t<Text style={getLongitudeTextStyle(index)} key={index}>\n\t\t\t\t\t\t{index * 10}\n\t\t\t\t\t</Text>\n\t\t\t\t);\n\t\t\t})}\n\t\t</AbsoluteBackground>\n\t);\n};\n\nexport default Grid;\n","import React from \"react\";\nimport {\n\tText,\n\tTouchableWithoutFeedback,\n\tuseWindowDimensions,\n\tView\n} from \"react-native\";\nimport { Gesture, GestureDetector } from \"react-native-gesture-handler\";\nimport Animated, {\n\tcancelAnimation,\n\trunOnJS,\n\tuseAnimatedReaction,\n\tuseAnimatedStyle,\n\tuseSharedValue,\n\twithDecay\n} from \"react-native-reanimated\";\nimport styled from \"styled-components/native\";\nimport { FlightData, FlightOptions } from \"../App\";\nimport { margin } from \"../constants\";\nimport Aircraft from \"./Aircraft\";\nimport DataPanel from \"./DataPanel\";\nimport Grid from \"./Grid\";\nimport { useClock } from \"./hooks/useClock\";\n\ninterface Props {\n\toptions: FlightOptions;\n\tdata: FlightData[];\n\tsetNavigation: React.Dispatch<React.SetStateAction<string>>;\n}\n\nconst Flight: React.FC<Props> = ({ setNavigation, options, data }) => {\n\tconst { width } = useWindowDimensions();\n\tconst mode = useSharedValue(\"\");\n\tconst front_thrust_components = useSharedValue({\n\t\ttotal: 0,\n\t\tvertical: 0,\n\t\thorizontal: 0,\n\t});\n\tconst back_thrust_components = useSharedValue({\n\t\ttotal: 0,\n\t\tvertical: 0,\n\t\thorizontal: 0,\n\t});\n\tconst vertical = useSharedValue({\n\t\tacceleration: 0,\n\t\tvelocity: 0,\n\t\tdistance: 0,\n\t});\n\tconst horizontal = useSharedValue({\n\t\tacceleration: 0,\n\t\tvelocity: 0,\n\t\tdistance: 0,\n\t});\n\tconst pitch = useSharedValue({\n\t\tacceleration: 0,\n\t\tvelocity: 0,\n\t\tdistance: 0,\n\t\tdegree: 0,\n\t\trad: 0,\n\t});\n\n\tconst clock_running = useSharedValue(true);\n\tconst clock = useSharedValue(0);\n\tconst _ = useClock(clock, clock_running);\n\n\tuseAnimatedReaction(\n\t\t() => clock.value,\n\t\t(clock) => {\n\t\t\tif (clock < 20) {\n\t\t\t\tconst rounded_clock = Math.round(clock * 100);\n\n\t\t\t\tmode.value = data[rounded_clock].mode;\n\t\t\t\tfront_thrust_components.value =\n\t\t\t\t\tdata[rounded_clock].frontThrustComponents;\n\t\t\t\tback_thrust_components.value =\n\t\t\t\t\tdata[rounded_clock].backThrustComponents;\n\t\t\t\tvertical.value = data[rounded_clock].vertical;\n\t\t\t\thorizontal.value = data[rounded_clock].horizontal;\n\t\t\t\tpitch.value = data[rounded_clock].pitch;\n\n\t\t\t\tconsole.log(clock);\n\n\t\t\t\t/* console.log(\n\t\t\t\t\trounded_clock,\n\t\t\t\t\tback_thrust_components.value.total,\n\t\t\t\t\tfront_thrust_components.value.total,\n\t\t\t\t\tpitch.value.acceleration,\n\t\t\t\t\tpitch.value.velocity,\n\t\t\t\t\tdata[rounded_clock].logger\n\t\t\t\t\t//logger[rounded_clock]\n\t\t\t\t); */\n\n\t\t\t\t/* text.value = {\n\t\t\t\t\tvertical: {\n\t\t\t\t\t\tacceleration: vertical.value.acceleration.toString(),\n\t\t\t\t\t\tvelocity: vertical.value.velocity.toString(),\n\t\t\t\t\t\tdistance: vertical.value.distance.toFixed(4),\n\t\t\t\t\t},\n\t\t\t\t}; */\n\t\t\t}\n\t\t}\n\t);\n\n\tconst getBoxStyle = (mode_val: string) => {\n\t\tconst landingStyle = useAnimatedStyle(() => {\n\t\t\treturn {\n\t\t\t\tbackgroundColor:\n\t\t\t\t\tmode.value == mode_val ? \"white\" : \"transparent\",\n\t\t\t\topacity: mode.value == mode_val ? 1 : 0.2,\n\t\t\t};\n\t\t});\n\t\treturn landingStyle;\n\t};\n\n\tconst clockBarStyle = useAnimatedStyle(() => {\n\t\treturn {\n\t\t\twidth: (clock.value / 20) * width,\n\t\t};\n\t});\n\n\tconst start_clock = useSharedValue(0);\n\tconst active = useSharedValue(false);\n\tconst panGesture = Gesture.Pan()\n\t\t.onBegin((e) => {\n\t\t\tstart_clock.value = clock.value;\n\t\t\tif (clock_running.value) {\n\t\t\t\tclock_running.value = false;\n\t\t\t\tcancelAnimation(clock);\n\t\t\t}\n\t\t})\n\t\t.onChange((e) => {\n\t\t\tactive.value = true;\n\t\t\tlet drag_clock = start_clock.value + e.translationX * (20 / width);\n\t\t\tlet clamped_drag_clock = Math.max(0, Math.min(drag_clock, 2000));\n\t\t\tclock.value = clamped_drag_clock;\n\t\t})\n\t\t.onFinalize(() => {\n\t\t\t/* if (!active.value) {\n\t\t\t\tif (clock_running.value) {\n\t\t\t\t\tconsole.log(\"stop clock!!\");\n\t\t\t\t\tclock_running.value = false;\n\t\t\t\t\tcancelAnimation(clock);\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log(\"start clock!!\");\n\t\t\t\t\tclock_running.value = true;\n\t\t\t\t}\n\t\t\t} */\n\t\t\t/* clock_running.value = true; */\n\n\t\t\tactive.value = false;\n\t\t})\n\t\t.onEnd((e) => {\n\t\t\tclock.value = withDecay({\n\t\t\t\tvelocity: e.velocityX / 80,\n\t\t\t\tclamp: [0, 20], // optionally define boundaries for the animation\n\t\t\t});\n\t\t});\n\n\tconst animatedBackgroundStyle = useAnimatedStyle(() => {\n\t\treturn {\n\t\t\tbackgroundColor: clock_running.value ? \"white\" : \"#e2e2e5\",\n\t\t};\n\t}, [clock_running]);\n\n\tconst toggle_clock_running = () => {\n\t\t\"worklet\";\n\t\tif (clock_running.value) {\n\t\t\tclock_running.value = false;\n\t\t\tcancelAnimation(clock);\n\t\t} else clock_running.value = !clock_running.value;\n\t};\n\n\treturn (\n\t\t<GestureDetector gesture={panGesture}>\n\t\t\t<TouchableWithoutFeedback\n\t\t\t\tonPress={() => {\n\t\t\t\t\trunOnJS(toggle_clock_running)();\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Animated.View\n\t\t\t\t\tstyle={[\n\t\t\t\t\t\tanimatedBackgroundStyle,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tjustifyContent: \"space-between\",\n\t\t\t\t\t\t\tflex: 1,\n\t\t\t\t\t\t},\n\t\t\t\t\t]}\n\t\t\t\t>\n\t\t\t\t\t<Grid />\n\t\t\t\t\t<Aircraft\n\t\t\t\t\t\t{...{ vertical }}\n\t\t\t\t\t\t{...{ horizontal }}\n\t\t\t\t\t\t{...{ pitch }}\n\t\t\t\t\t\t{...{ back_thrust_components }}\n\t\t\t\t\t\t{...{ front_thrust_components }}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<BackButton onPress={() => setNavigation(\"input\")}>\n\t\t\t\t\t\t<Text>x</Text>\n\t\t\t\t\t</BackButton>\n\t\t\t\t\t<View>\n\t\t\t\t\t\t<DataPanel\n\t\t\t\t\t\t\t{...{ clock }}\n\t\t\t\t\t\t\t{...{ pitch }}\n\t\t\t\t\t\t\t{...{ vertical }}\n\t\t\t\t\t\t\t{...{ horizontal }}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Animated.View\n\t\t\t\t\t\t\tstyle={[\n\t\t\t\t\t\t\t\tclockBarStyle,\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\theight: 2,\n\t\t\t\t\t\t\t\t\tbackgroundColor: \"black\",\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t></Animated.View>\n\n\t\t\t\t\t\t<Overview>\n\t\t\t\t\t\t\t<Box style={getBoxStyle(\"takeoff\")}>\n\t\t\t\t\t\t\t\t<Text>Takeoff</Text>\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t<Box style={getBoxStyle(\"tilt_to_cruise\")}>\n\t\t\t\t\t\t\t\t<Text>Tilt to Cruise</Text>\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t<Box style={getBoxStyle(\"cruise\")}>\n\t\t\t\t\t\t\t\t<Text>Cruise</Text>\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t<Box style={getBoxStyle(\"tilt_to_land\")}>\n\t\t\t\t\t\t\t\t<Text>Tilt to Land</Text>\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t<Box style={getBoxStyle(\"landing\")}>\n\t\t\t\t\t\t\t\t<Text>Landing</Text>\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t</Overview>\n\t\t\t\t\t</View>\n\t\t\t\t</Animated.View>\n\t\t\t</TouchableWithoutFeedback>\n\t\t</GestureDetector>\n\t);\n};\n\nconst BackButton = styled.TouchableOpacity`\n\theight: 50px;\n\twidth: 50px;\n\ttop: ${margin / 2}px;\n\tleft: ${margin / 2}px;\n\tjustify-content: center;\n\talign-items: center;\n\tbackground-color: white;\n\tborder-width: 1px;\n\tborder-color: black;\n`;\n\nconst Overview = styled.View`\n\tflex-direction: row;\n\tjustify-content: space-between;\n\tjustify-self: flex-end;\n`;\n\nconst Box = styled(Animated.View)`\n\tborder-color: black;\n\tborder-width: 1px;\n\tpadding: ${margin / 2}px;\n\tflex: 1;\n`;\n\nexport default Flight;\n","import Animated, {\n\tEasing,\n\tuseAnimatedReaction,\n\tuseDerivedValue,\n\tuseSharedValue,\n\twithTiming\n} from \"react-native-reanimated\";\n\nexport const useClock = (\n\tclock: Animated.SharedValue<number>,\n\tclock_running: Animated.SharedValue<boolean>\n) => {\n\tconst runClock = () => {\n\t\t\"worklet\";\n\t\tconst NR_OF_SEC = 20;\n\t\tclock.value = withTiming(\n\t\t\tNR_OF_SEC,\n\t\t\t{\n\t\t\t\tduration: NR_OF_SEC * 1000 - clock.value,\n\t\t\t\teasing: Easing.linear,\n\t\t\t},\n\t\t\t(finished) => {\n\t\t\t\tif (finished === true) {\n\t\t\t\t\tclock.value = 0;\n\t\t\t\t\t//\tclock_running.value = false\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t};\n\n\tuseAnimatedReaction(\n\t\t() => clock_running.value,\n\t\t(clock_running) => {\n\t\t\tif (clock_running) {\n\t\t\t\trunClock();\n\t\t\t}\n\t\t}\n\t);\n\n\tconst formatedClock = useDerivedValue(() => {\n\t\treturn Number((Math.round(clock.value * 100) / 100).toFixed(2));\n\t});\n\n\tconst resultClock = useSharedValue(0);\n\tuseAnimatedReaction(\n\t\t() => formatedClock.value > resultClock.value,\n\t\t(isNew) => {\n\t\t\tif (isNew) resultClock.value = formatedClock.value;\n\t\t}\n\t);\n\treturn resultClock;\n};\n","import { FlightOptions } from \"../../App\";\nimport { MAX_THRUST_PER_SIDE } from \"../../constants\";\nimport { round } from \"./common\";\n\nexport const runTakeoff = (\n\tengines_running: boolean,\n\toptions: FlightOptions,\n\tvAcceleration: number,\n\tvVelocity: number,\n\tvDistance: number,\n\tback_thrust: number,\n\tfront_thrust: number,\n\tlogger: string,\n\tmode: string\n) => {\n\t\"worklet\";\n\tif (engines_running) {\n\t\tconst potAcceleration = -9.81;\n\t\tlet potVelocity = vVelocity;\n\t\tlet potAltitude = vDistance;\n\t\tfor (let j = 0; j <= 2000; j++) {\n\t\t\tpotVelocity = potVelocity + potAcceleration / 100;\n\t\t\tpotAltitude = potAltitude + potVelocity / 100;\n\t\t\tif (potAltitude >= options.targetAltitude) {\n\t\t\t\tengines_running = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Switch to Cruise\n\tif (\n\t\tvDistance >= options.targetAltitude * 0.5 &&\n\t\tvVelocity == 0 &&\n\t\tvAcceleration == 0\n\t) {\n\t\tmode = \"tilt_to_cruise\";\n\t}\n\n\t// Speed Correction\n\tif (vVelocity < 0 && vAcceleration == 0) {\n\t\tconst correction_thrust = round((-vVelocity / 2) * 100 + 9.81 / 2);\n\n\t\tfront_thrust = correction_thrust;\n\t\tback_thrust = correction_thrust;\n\t\tconsole.log(\"speed correct\", correction_thrust);\n\t}\n\n\t// Hover\n\telse if (vDistance >= options.targetAltitude * 0.5 && vVelocity <= 0) {\n\t\tfront_thrust = 9.81 / 2;\n\t\tback_thrust = 9.81 / 2;\n\t}\n\n\t// Free Fall\n\telse if (!engines_running) {\n\t\tfront_thrust = 0;\n\t\tback_thrust = 0;\n\t}\n\n\t//  Max Thrust\n\telse {\n\t\tfront_thrust = MAX_THRUST_PER_SIDE;\n\t\tback_thrust = MAX_THRUST_PER_SIDE;\n\t}\n\n\treturn {\n\t\tengines_running,\n\t\tfront_thrust,\n\t\tback_thrust,\n\t\tlogger,\n\t\tmode,\n\t\tvAcceleration,\n\t\tvVelocity,\n\t\tvDistance,\n\t};\n};\n","import { FlightOptions } from \"../../App\";\nimport { MAX_THRUST_PER_SIDE } from \"../../constants\";\nimport { round } from \"./common\";\n\nexport const adjust_for_horizontal = (\n\tthrust_total: number,\n\tpitch_angle: number\n) => {\n\treturn Math.min(\n\t\tthrust_total / Math.cos((pitch_angle * Math.PI) / 180),\n\t\tMAX_THRUST_PER_SIDE\n\t);\n};\n\nexport const runTiltToCruise = (\n\toptions: FlightOptions,\n\ttilting: boolean,\n\tvVelocity: number,\n\tvAcceleration: number,\n\tpitch_angle: number,\n\tpitchVelocity: number,\n\tpitchAcceleration: number,\n\tmode: string,\n\tfront_thrust: number,\n\tback_thrust: number,\n\tlogger: string\n) => {\n\tconst hover_thrust = 9.81 / 2;\n\tconst thrust_differential = 4; // Math.min(MAX_THRUST_PER_SIDE, 9.81 / 2);\n\tlogger = pitch_angle.toString();\n\n\t//TILT CUTTOFF\n\tif (tilting) {\n\t\tif (pitch_angle >= options.maxPitch / 2) {\n\t\t\ttilting = false;\n\t\t}\n\t}\n\n\t//SWITCH TO CRUISE\n\tif (\n\t\tpitch_angle > options.maxPitch * 0.5 &&\n\t\tpitchVelocity == 0 &&\n\t\tpitchAcceleration == 0\n\t) {\n\t\t// Vertical Speed Correction\n\t\t// Speed Correction\n\t\tif (vVelocity < 0 && vAcceleration == 0) {\n\t\t\tconst correction_thrust = MAX_THRUST_PER_SIDE;\n\n\t\t\tfront_thrust = adjust_for_horizontal(\n\t\t\t\tcorrection_thrust,\n\t\t\t\tpitch_angle\n\t\t\t);\n\t\t\tback_thrust = adjust_for_horizontal(correction_thrust, pitch_angle);\n\t\t\tconsole.log(\"speed correct\", correction_thrust);\n\t\t} else {\n\t\t\tmode = \"cruise\";\n\t\t}\n\t\t/* \n\t\tif (pitchVelocity < 0 && pitchAcceleration == 0) {\n\t\t\tconst correction_thrust = round((-pitchVelocity / 2) * 100);\n\n\t\t\tfront_thrust = adjust_for_horizontal(\n\t\t\t\t9.81 / 2 - correction_thrust / 2,\n\t\t\t\tpitch_angle\n\t\t\t);\n\t\t\tback_thrust = adjust_for_horizontal(\n\t\t\t\t9.81 / 2 + correction_thrust / 2,\n\t\t\t\tpitch_angle\n\t\t\t);\n\t\t\tconsole.log(\"speed correct\", correction_thrust);\n\t\t}\n */\n\t}\n\n\t// Pitch Speed Correction\n\tif (pitchVelocity < 0 && pitchAcceleration == 0) {\n\t\tconst correction_thrust = round((-pitchVelocity / 2) * 100);\n\n\t\tfront_thrust = adjust_for_horizontal(\n\t\t\t9.81 / 2 - correction_thrust / 2,\n\t\t\tpitch_angle\n\t\t);\n\t\tback_thrust = adjust_for_horizontal(\n\t\t\t9.81 / 2 + correction_thrust / 2,\n\t\t\tpitch_angle\n\t\t);\n\t\tconsole.log(\"speed correct\", correction_thrust);\n\t}\n\n\t// Idle\n\telse if (pitch_angle > options.maxPitch * 0.5 && pitchVelocity <= 0) {\n\t\tif (options.disableHorizontal) {\n\t\t\tfront_thrust = hover_thrust;\n\t\t\tback_thrust = hover_thrust;\n\t\t} else {\n\t\t\tfront_thrust = adjust_for_horizontal(hover_thrust, pitch_angle);\n\t\t\tback_thrust = adjust_for_horizontal(hover_thrust, pitch_angle);\n\t\t}\n\t}\n\n\t// Thrust\n\telse if (tilting) {\n\t\tif (options.disableHorizontal) {\n\t\t\tfront_thrust = hover_thrust - thrust_differential;\n\t\t\tback_thrust = hover_thrust + thrust_differential;\n\t\t} else {\n\t\t\tfront_thrust = adjust_for_horizontal(\n\t\t\t\thover_thrust - thrust_differential,\n\t\t\t\tpitch_angle\n\t\t\t);\n\t\t\tback_thrust = adjust_for_horizontal(\n\t\t\t\thover_thrust + thrust_differential,\n\t\t\t\tpitch_angle\n\t\t\t);\n\t\t}\n\t}\n\n\t// Reverse Thrust\n\telse {\n\t\tif (options.disableHorizontal) {\n\t\t\tfront_thrust = hover_thrust + thrust_differential;\n\t\t\tback_thrust = hover_thrust - thrust_differential;\n\t\t} else {\n\t\t\tfront_thrust = adjust_for_horizontal(\n\t\t\t\thover_thrust + thrust_differential,\n\t\t\t\tpitch_angle\n\t\t\t);\n\t\t\tback_thrust = adjust_for_horizontal(\n\t\t\t\thover_thrust - thrust_differential,\n\t\t\t\tpitch_angle\n\t\t\t);\n\t\t}\n\t}\n\n\treturn {\n\t\tlogger,\n\t\ttilting,\n\t\tmode,\n\t\tback_thrust,\n\t\tfront_thrust,\n\t};\n};\n","import React, { useState } from \"react\";\nimport { Button, Text, TextInput, TouchableOpacity, View } from \"react-native\";\nimport styled from \"styled-components/native\";\nimport { FlightOptions } from \"../App\";\nimport { margin } from \"../constants\";\n\ninterface Props {\n\tsetOptions: React.Dispatch<React.SetStateAction<FlightOptions>>;\n}\n\nconst FlightOptionInputs: React.FC<Props> = ({ setOptions }) => {\n\tconst [targetAltitude, setTargetAltitude] = useState(40);\n\tconst [targetDistance, setTargetDistance] = useState(40);\n\tconst [maxPitch, setMaxPitch] = useState(45);\n\tconst [aircraftType, setAircraftType] = useState(\"quad\");\n\tconst [disableHorizontal, setDisableHorizontal] = useState<boolean>(false);\n\n\tconst save_input = () => {\n\t\tsetOptions({\n\t\t\ttargetAltitude: targetAltitude,\n\t\t\ttargetDistance: targetDistance,\n\t\t\taircraftType: aircraftType,\n\t\t\tdisableHorizontal: disableHorizontal,\n\t\t\tmaxPitch: maxPitch,\n\t\t});\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<View style={{ height: margin / 2 }} />\n\t\t\t<Text>{\"Altitude (m):\"}</Text>\n\t\t\t<Input\n\t\t\t\tvalue={targetAltitude.toString()}\n\t\t\t\tonChangeText={(e: string) => {\n\t\t\t\t\tconst number = Number(e);\n\t\t\t\t\tif (!isNaN(number)) {\n\t\t\t\t\t\tsetTargetAltitude(number);\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<View style={{ height: margin / 2 }} />\n\t\t\t<Text>{\"Distance (m):\"}</Text>\n\t\t\t<Input\n\t\t\t\tvalue={targetDistance.toString()}\n\t\t\t\tonChangeText={(e: string) => {\n\t\t\t\t\tconst number = Number(e);\n\t\t\t\t\tif (!isNaN(number)) {\n\t\t\t\t\t\tsetTargetDistance(number);\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<View style={{ height: margin / 2 }} />\n\t\t\t<Text>{\"Tilt Angle:\"}</Text>\n\t\t\t<Input\n\t\t\t\tvalue={maxPitch.toString()}\n\t\t\t\tonChangeText={(e: string) => {\n\t\t\t\t\tconst number = Number(e);\n\t\t\t\t\tif (!isNaN(number)) {\n\t\t\t\t\t\tsetMaxPitch(number);\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<View style={{ height: margin / 2 }} />\n\t\t\t<View style={{ flexDirection: \"row\" }}>\n\t\t\t\t<TouchableOpacity onPress={() => setAircraftType(\"quad\")}>\n\t\t\t\t\t<Toggle\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tbackgroundColor:\n\t\t\t\t\t\t\t\taircraftType == \"quad\" ? \"white\" : \"lightgrey\",\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Text>Quad</Text>\n\t\t\t\t\t</Toggle>\n\t\t\t\t</TouchableOpacity>\n\t\t\t\t<TouchableOpacity\n\t\t\t\t\tonPress={() => setAircraftType(\"tail_sitter\")}\n\t\t\t\t>\n\t\t\t\t\t<Toggle\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tbackgroundColor:\n\t\t\t\t\t\t\t\taircraftType == \"tail_sitter\"\n\t\t\t\t\t\t\t\t\t? \"white\"\n\t\t\t\t\t\t\t\t\t: \"lightgrey\",\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Text>Tail Sitter</Text>\n\t\t\t\t\t</Toggle>\n\t\t\t\t</TouchableOpacity>\n\t\t\t</View>\n\n\t\t\t<View style={{ height: margin / 2 }} />\n\t\t\t<View style={{ flexDirection: \"row\" }}>\n\t\t\t\t<TouchableOpacity\n\t\t\t\t\tonPress={() => {\n\t\t\t\t\t\tsetDisableHorizontal((curr: boolean) => !curr);\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<Toggle\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tbackgroundColor: disableHorizontal\n\t\t\t\t\t\t\t\t? \"white\"\n\t\t\t\t\t\t\t\t: \"lightgrey\",\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Text>Disable Horizontal Modement</Text>\n\t\t\t\t\t</Toggle>\n\t\t\t\t</TouchableOpacity>\n\t\t\t\t<View style={{ height: margin / 2 }} />\n\t\t\t</View>\n\t\t\t<View style={{ height: margin / 2 }} />\n\t\t\t<Button\n\t\t\t\ttitle=\"Go\"\n\t\t\t\tonPress={() => {\n\t\t\t\t\tsave_input();\n\t\t\t\t}}\n\t\t\t/>\n\t\t</>\n\t);\n};\n\nconst Input = styled(TextInput)`\n\tborder-color: black;\n\tborder-width: 1px;\n\tpadding: ${margin / 2}px;\n`;\n\nconst Toggle = styled.View`\n\tpadding: ${margin / 2}px;\n\tborder-width: 1px;\n\tborder-color: black;\n`;\n\nexport default FlightOptionInputs;\n","import React, { useEffect } from \"react\";\nimport { Text, View } from \"react-native\";\nimport { FlightData, FlightOptions } from \"../App\";\nimport { margin } from \"../constants\";\nimport { calculateFlight } from \"./calculations/main\";\nimport FlightOptionInputs from \"./FlightOptionInputs\";\n\ninterface Props {\n\toptions: FlightOptions;\n\tsetOptions: React.Dispatch<React.SetStateAction<FlightOptions>>;\n\tsetData: React.Dispatch<React.SetStateAction<FlightData[]>>;\n\tsetNavigation: React.Dispatch<React.SetStateAction<string>>;\n\tnavigation: string;\n}\n\nconst Planner: React.FC<Props> = ({\n\toptions,\n\tsetOptions,\n\tsetData,\n\tsetNavigation,\n\tnavigation,\n}) => {\n\tuseEffect(() => {\n\t\tif (navigation == \"input\" && options.aircraftType !== \"\")\n\t\t\tsetOptions({\n\t\t\t\taircraftType: \"\",\n\t\t\t\ttargetAltitude: 0,\n\t\t\t\ttargetDistance: 0,\n\t\t\t\tdisableHorizontal: true,\n\t\t\t\tmaxPitch: 0,\n\t\t\t});\n\t}, [options, navigation]);\n\n\tuseEffect(() => {\n\t\tif (options.aircraftType !== \"\") {\n\t\t\tconst flightData = calculateFlight(options);\n\t\t\tsetData(flightData);\n\t\t\tsetNavigation(\"flight\");\n\t\t}\n\t}, [options]);\n\n\treturn (\n\t\t<View style={{ margin: margin }}>\n\t\t\t<Text>Flight Planner</Text>\n\t\t\t<FlightOptionInputs {...{ setOptions }} />\n\t\t</View>\n\t);\n};\n\nexport default Planner;\n","import { FlightData, FlightOptions } from \"../../App\";\nimport { round } from \"./common\";\nimport { runTakeoff } from \"./takeoff\";\nimport { runTiltToCruise } from \"./tilt_to_cruise\";\n\nexport const calculateFlight = (options: FlightOptions) => {\n\tconst flightData: FlightData[] = [];\n\n\tlet engines_running = true;\n\tlet tilting = true;\n\n\tlet mode = \"takeoff\";\n\tlet vAcceleration = 0;\n\tlet vVelocity = 0;\n\tlet vDistance = 0;\n\tlet hAcceleration = 0;\n\tlet hVelocity = 0;\n\tlet hDistance = 0;\n\tlet front_thrust = 0;\n\tlet back_thrust = 0;\n\n\tlet pitchAcceleration = 0;\n\tlet pitchVelocity = 0;\n\tlet pitchDistance = 0;\n\tlet pitch_angle = 0;\n\n\tlet logger = \"\";\n\n\tfor (let i = 0; i <= 2000; i++) {\n\t\t//TAKEOFF\n\t\tif (mode == \"takeoff\") {\n\t\t\tconst results = runTakeoff(\n\t\t\t\tengines_running,\n\t\t\t\toptions,\n\t\t\t\tvAcceleration,\n\t\t\t\tvVelocity,\n\t\t\t\tvDistance,\n\t\t\t\tback_thrust,\n\t\t\t\tfront_thrust,\n\t\t\t\tlogger,\n\t\t\t\tmode\n\t\t\t);\n\t\t\tengines_running = results.engines_running;\n\t\t\tvAcceleration = results.vAcceleration;\n\t\t\tvVelocity = results.vVelocity;\n\t\t\tvDistance = results.vDistance;\n\t\t\tback_thrust = results.back_thrust;\n\t\t\tfront_thrust = results.front_thrust;\n\t\t\tlogger = results.logger;\n\t\t\tmode = results.mode;\n\t\t}\n\n\t\t//CRUISE4\n\t\tif (mode == \"tilt_to_cruise\") {\n\t\t\tconst results = runTiltToCruise(\n\t\t\t\toptions,\n\t\t\t\ttilting,\n\t\t\t\tvAcceleration,\n\t\t\t\tvVelocity,\n\t\t\t\tpitch_angle,\n\t\t\t\tpitchVelocity,\n\t\t\t\tpitchAcceleration,\n\t\t\t\tmode,\n\t\t\t\tfront_thrust,\n\t\t\t\tback_thrust,\n\t\t\t\tlogger\n\t\t\t);\n\n\t\t\tlogger = results.logger;\n\t\t\ttilting = results.tilting;\n\t\t\tmode = results.mode;\n\t\t\tback_thrust = results.back_thrust;\n\t\t\tfront_thrust = results.front_thrust;\n\t\t}\n\t\tif (mode == \"cruise\") {\n\t\t\t// Reverse Thrust\n\t\t}\n\t\t/* \tif (mode == \"tilt_to_land\") {\n\t\t\t\t//TILT CUTTOFF\n\t\t\t\tif (tilting) {\n\t\t\t\t\tif (pitch_angle <= target_pitch_angle / 2) {\n\t\t\t\t\t\ttilting = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Idle\n\t\t\t\tif (\n\t\t\t\t\tpitch_angle < target_pitch_angle / 2 &&\n\t\t\t\t\tradialVelocity >= 0\n\t\t\t\t) {\n\t\t\t\t\tfront_thrust = round(9.81 / 2);\n\t\t\t\t\tback_thrust = round(9.81 / 2);\n\t\t\t\t\t//\tmode = \"cruise\";\n\t\t\t\t}\n\n\t\t\t\t// Thrust\n\t\t\t\telse if (tilting) {\n\t\t\t\t\tfront_thrust = round(9.81 / 2 + 1);\n\t\t\t\t\tback_thrust = round(9.81 / 2 - 1);\n\t\t\t\t}\n\n\t\t\t\t// Reverse Thrust\n\t\t\t\telse {\n\t\t\t\t\tfront_thrust = round(9.81 / 2 - 1);\n\t\t\t\t\tback_thrust = round(9.81 / 2 + 1);\n\t\t\t\t}\n\t\t\t\tlogger = tilting + \"\";\n\t\t\t} */\n\n\t\t/*\n\t\t\t//LANDING\n\t\t\tif (mode[i] == \"landing\") {\n\t\t\t\t// Calculate Engine Cutoff\n\t\t\t\tmode_state = \"landing\";\n\t\t\t\tif (!engines_start) {\n\t\t\t\t\tconst potAcceleration = MAX_THRUST;\n\t\t\t\t\tlet potVelocity = hVelocity[i];\n\t\t\t\t\tlet potAltitude = vAltitude[i];\n\t\t\t\t\tfor (let j = 0; j <= 2000; j++) {\n\t\t\t\t\t\tpotVelocity = potVelocity + potAcceleration / 100;\n\t\t\t\t\t\tpotAltitude = potAltitude + potVelocity / 100;\n\t\t\t\t\t\tif (potAltitude <= 0) {\n\t\t\t\t\t\t\tengines_start = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Speed Correction\n\t\t\t\tif (hVelocity[i] < 0 && acceleration == 0) {\n\t\t\t\t\tconsole.log(\"speed correct\", hVelocity[i]);\n\t\t\t\t\tacceleration =\n\t\t\t\t\t\tMath.min(-hVelocity[i] * 100, MAX_THRUST) + 9.81;\n\t\t\t\t}\n\t\t\t\t// Hover\n\t\t\t\telse if (\n\t\t\t\t\tvAltitude[i] <= targetAltitude * 0.5 &&\n\t\t\t\t\thVelocity[i] >= 0\n\t\t\t\t) {\n\t\t\t\t\tacceleration = 0;\n\t\t\t\t}\n\t\t\t\t// Free Fall\n\t\t\t\telse if (!engines_start) {\n\t\t\t\t\tacceleration = -9.81;\n\t\t\t\t}\n\t\t\t\t// Max Thrust\n\t\t\t\telse acceleration = MAX_THRUST - 9.81;\n\t\t\t}\n\n\t\t\t*/\n\n\t\t// Pitch Angle\n\t\tpitchAcceleration = round(back_thrust - front_thrust);\n\t\tpitchVelocity = round(pitchVelocity + round(pitchAcceleration / 100));\n\t\tpitchDistance = round(pitchDistance + round(pitchVelocity / 100));\n\t\tpitch_angle = round((pitchDistance * 180) / Math.PI);\n\n\t\t// Thrust Components\n\t\tconst front_vertical = round(\n\t\t\tMath.cos((pitch_angle * Math.PI) / 180) * front_thrust\n\t\t);\n\t\tconst front_horizontal = round(\n\t\t\tMath.sin((pitch_angle * Math.PI) / 180) * front_thrust\n\t\t);\n\t\tconst back_vertical = round(\n\t\t\tMath.cos((pitch_angle * Math.PI) / 180) * back_thrust\n\t\t);\n\t\tconst back_horizontal = round(\n\t\t\tMath.sin((pitch_angle * Math.PI) / 180) * back_thrust\n\t\t);\n\n\t\t// Vertical Movement\n\t\tif (options.disableHorizontal) {\n\t\t\tvAcceleration = round(front_thrust + back_thrust - 9.81);\n\t\t} else vAcceleration = round(front_vertical + back_vertical - 9.81);\n\t\tvVelocity = round(vVelocity + round(vAcceleration / 100));\n\t\tvDistance = round(vDistance + round(vVelocity / 100));\n\n\t\t// Horizontal Movement\n\t\tif (!options.disableHorizontal) {\n\t\t\thAcceleration = round(front_horizontal + back_horizontal);\n\t\t\tconsole.log(hAcceleration);\n\t\t\thVelocity = round(hVelocity + round(hAcceleration / 100));\n\t\t\thDistance = round(hDistance + round(hVelocity / 100));\n\t\t}\n\n\t\tconst flightMoment: FlightData = {\n\t\t\tmode: mode,\n\t\t\tfrontThrustComponents: {\n\t\t\t\ttotal: front_thrust,\n\t\t\t\tvertical: front_vertical,\n\t\t\t\thorizontal: front_horizontal,\n\t\t\t},\n\t\t\tbackThrustComponents: {\n\t\t\t\ttotal: back_thrust,\n\t\t\t\tvertical: back_vertical,\n\t\t\t\thorizontal: back_horizontal,\n\t\t\t},\n\t\t\tvertical: {\n\t\t\t\tacceleration: vAcceleration,\n\t\t\t\tvelocity: vVelocity,\n\t\t\t\tdistance: vDistance,\n\t\t\t},\n\t\t\thorizontal: {\n\t\t\t\tacceleration: hAcceleration,\n\t\t\t\tvelocity: hVelocity,\n\t\t\t\tdistance: hDistance,\n\t\t\t},\n\t\t\tpitch: {\n\t\t\t\tacceleration: pitchAcceleration,\n\t\t\t\tvelocity: pitchVelocity,\n\t\t\t\tdistance: pitchDistance,\n\t\t\t\tdegree: pitch_angle,\n\t\t\t\trad: round((pitch_angle * Math.PI) / 180),\n\t\t\t},\n\t\t\tlogger: logger,\n\t\t};\n\n\t\tflightData.push(flightMoment);\n\t}\n\n\treturn flightData;\n};\n","import { StatusBar } from \"expo-status-bar\";\nimport React, { useState } from \"react\";\nimport { SafeAreaView, useWindowDimensions } from \"react-native\";\nimport styled from \"styled-components/native\";\nimport Flight from \"./src/Flight\";\nimport Planner from \"./src/Planner\";\n\nexport interface FlightData {\n\tmode: string;\n\tfrontThrustComponents: ThrustComponents;\n\tbackThrustComponents: ThrustComponents;\n\tvertical: {\n\t\tacceleration: number;\n\t\tvelocity: number;\n\t\tdistance: number;\n\t};\n\thorizontal: {\n\t\tacceleration: number;\n\t\tvelocity: number;\n\t\tdistance: number;\n\t};\n\tpitch: {\n\t\tacceleration: number;\n\t\tvelocity: number;\n\t\tdistance: number;\n\t\tdegree: number;\n\t\trad: number;\n\t};\n\tlogger: string;\n}\n\nexport interface ThrustComponents {\n\ttotal: number;\n\tvertical: number;\n\thorizontal: number;\n}\n\nexport interface FlightOptions {\n\ttargetAltitude: number;\n\ttargetDistance: number;\n\taircraftType: string;\n\tdisableHorizontal: boolean;\n\tmaxPitch: number;\n}\n\nconst App: React.FC<{}> = ({}) => {\n\tconst { width } = useWindowDimensions();\n\tconst [data, setData] = useState<FlightData[]>([]);\n\tconst [options, setOptions] = useState<FlightOptions>({\n\t\ttargetAltitude: 0,\n\t\ttargetDistance: 0,\n\t\taircraftType: \"\",\n\t\tdisableHorizontal: false,\n\t\tmaxPitch: 0,\n\t});\n\tconst [navigation, setNavigation] = useState<string>(\"input\");\n\n\tconst Background = styled.View`\n\t\tflex: 1;\n\t\twidth: ${width}px;\n\t\toverflow: hidden;\n\t\tbackground-color: #e2e2e5;\n\t`;\n\n\treturn (\n\t\t<SafeAreaView style={{ flex: 1 }}>\n\t\t\t<Background>\n\t\t\t\t<StatusBar style=\"dark\" />\n\t\t\t\t{navigation == \"input\" || navigation == \"planner\" ? (\n\t\t\t\t\t<Planner\n\t\t\t\t\t\t{...{ options }}\n\t\t\t\t\t\t{...{ setOptions }}\n\t\t\t\t\t\t{...{ setData }}\n\t\t\t\t\t\t{...{ navigation }}\n\t\t\t\t\t\t{...{ setNavigation }}\n\t\t\t\t\t/>\n\t\t\t\t) : (\n\t\t\t\t\t<Flight\n\t\t\t\t\t\t{...{ setNavigation }}\n\t\t\t\t\t\t{...{ options }}\n\t\t\t\t\t\t{...{ data }}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</Background>\n\t\t</SafeAreaView>\n\t);\n};\n\nexport default App;\n"],"sourceRoot":""}